{
  "version": 3,
  "sources": ["../../node_modules/@hotwired/turbo/dist/turbo.es2017-esm.js", "../../_source/_assets/js/main.js"],
  "sourcesContent": ["/*!\nTurbo 8.0.0\nCopyright \u00A9 2024 37signals LLC\n */\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2019 Javan Makhmali\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function (prototype) {\n  if (typeof prototype.requestSubmit == \"function\") return\n\n  prototype.requestSubmit = function (submitter) {\n    if (submitter) {\n      validateSubmitter(submitter, this);\n      submitter.click();\n    } else {\n      submitter = document.createElement(\"input\");\n      submitter.type = \"submit\";\n      submitter.hidden = true;\n      this.appendChild(submitter);\n      submitter.click();\n      this.removeChild(submitter);\n    }\n  };\n\n  function validateSubmitter(submitter, form) {\n    submitter instanceof HTMLElement || raise(TypeError, \"parameter 1 is not of type 'HTMLElement'\");\n    submitter.type == \"submit\" || raise(TypeError, \"The specified element is not a submit button\");\n    submitter.form == form ||\n      raise(DOMException, \"The specified element is not owned by this form element\", \"NotFoundError\");\n  }\n\n  function raise(errorConstructor, message, name) {\n    throw new errorConstructor(\"Failed to execute 'requestSubmit' on 'HTMLFormElement': \" + message + \".\", name)\n  }\n})(HTMLFormElement.prototype);\n\nconst submittersByForm = new WeakMap();\n\nfunction findSubmitterFromClickTarget(target) {\n  const element = target instanceof Element ? target : target instanceof Node ? target.parentElement : null;\n  const candidate = element ? element.closest(\"input, button\") : null;\n  return candidate?.type == \"submit\" ? candidate : null\n}\n\nfunction clickCaptured(event) {\n  const submitter = findSubmitterFromClickTarget(event.target);\n\n  if (submitter && submitter.form) {\n    submittersByForm.set(submitter.form, submitter);\n  }\n}\n\n(function () {\n  if (\"submitter\" in Event.prototype) return\n\n  let prototype = window.Event.prototype;\n  // Certain versions of Safari 15 have a bug where they won't\n  // populate the submitter. This hurts TurboDrive's enable/disable detection.\n  // See https://bugs.webkit.org/show_bug.cgi?id=229660\n  if (\"SubmitEvent\" in window) {\n    const prototypeOfSubmitEvent = window.SubmitEvent.prototype;\n\n    if (/Apple Computer/.test(navigator.vendor) && !(\"submitter\" in prototypeOfSubmitEvent)) {\n      prototype = prototypeOfSubmitEvent;\n    } else {\n      return // polyfill not needed\n    }\n  }\n\n  addEventListener(\"click\", clickCaptured, true);\n\n  Object.defineProperty(prototype, \"submitter\", {\n    get() {\n      if (this.type == \"submit\" && this.target instanceof HTMLFormElement) {\n        return submittersByForm.get(this.target)\n      }\n    }\n  });\n})();\n\nconst FrameLoadingStyle = {\n  eager: \"eager\",\n  lazy: \"lazy\"\n};\n\n/**\n * Contains a fragment of HTML which is updated based on navigation within\n * it (e.g. via links or form submissions).\n *\n * @customElement turbo-frame\n * @example\n *   <turbo-frame id=\"messages\">\n *     <a href=\"/messages/expanded\">\n *       Show all expanded messages in this frame.\n *     </a>\n *\n *     <form action=\"/messages\">\n *       Show response from this form within this frame.\n *     </form>\n *   </turbo-frame>\n */\nclass FrameElement extends HTMLElement {\n  static delegateConstructor = undefined\n\n  loaded = Promise.resolve()\n\n  static get observedAttributes() {\n    return [\"disabled\", \"complete\", \"loading\", \"src\"]\n  }\n\n  constructor() {\n    super();\n    this.delegate = new FrameElement.delegateConstructor(this);\n  }\n\n  connectedCallback() {\n    this.delegate.connect();\n  }\n\n  disconnectedCallback() {\n    this.delegate.disconnect();\n  }\n\n  reload() {\n    return this.delegate.sourceURLReloaded()\n  }\n\n  attributeChangedCallback(name) {\n    if (name == \"loading\") {\n      this.delegate.loadingStyleChanged();\n    } else if (name == \"complete\") {\n      this.delegate.completeChanged();\n    } else if (name == \"src\") {\n      this.delegate.sourceURLChanged();\n    } else {\n      this.delegate.disabledChanged();\n    }\n  }\n\n  /**\n   * Gets the URL to lazily load source HTML from\n   */\n  get src() {\n    return this.getAttribute(\"src\")\n  }\n\n  /**\n   * Sets the URL to lazily load source HTML from\n   */\n  set src(value) {\n    if (value) {\n      this.setAttribute(\"src\", value);\n    } else {\n      this.removeAttribute(\"src\");\n    }\n  }\n\n  /**\n   * Gets the refresh mode for the frame.\n   */\n  get refresh() {\n    return this.getAttribute(\"refresh\")\n  }\n\n  /**\n   * Sets the refresh mode for the frame.\n   */\n  set refresh(value) {\n    if (value) {\n      this.setAttribute(\"refresh\", value);\n    } else {\n      this.removeAttribute(\"refresh\");\n    }\n  }\n\n  /**\n   * Determines if the element is loading\n   */\n  get loading() {\n    return frameLoadingStyleFromString(this.getAttribute(\"loading\") || \"\")\n  }\n\n  /**\n   * Sets the value of if the element is loading\n   */\n  set loading(value) {\n    if (value) {\n      this.setAttribute(\"loading\", value);\n    } else {\n      this.removeAttribute(\"loading\");\n    }\n  }\n\n  /**\n   * Gets the disabled state of the frame.\n   *\n   * If disabled, no requests will be intercepted by the frame.\n   */\n  get disabled() {\n    return this.hasAttribute(\"disabled\")\n  }\n\n  /**\n   * Sets the disabled state of the frame.\n   *\n   * If disabled, no requests will be intercepted by the frame.\n   */\n  set disabled(value) {\n    if (value) {\n      this.setAttribute(\"disabled\", \"\");\n    } else {\n      this.removeAttribute(\"disabled\");\n    }\n  }\n\n  /**\n   * Gets the autoscroll state of the frame.\n   *\n   * If true, the frame will be scrolled into view automatically on update.\n   */\n  get autoscroll() {\n    return this.hasAttribute(\"autoscroll\")\n  }\n\n  /**\n   * Sets the autoscroll state of the frame.\n   *\n   * If true, the frame will be scrolled into view automatically on update.\n   */\n  set autoscroll(value) {\n    if (value) {\n      this.setAttribute(\"autoscroll\", \"\");\n    } else {\n      this.removeAttribute(\"autoscroll\");\n    }\n  }\n\n  /**\n   * Determines if the element has finished loading\n   */\n  get complete() {\n    return !this.delegate.isLoading\n  }\n\n  /**\n   * Gets the active state of the frame.\n   *\n   * If inactive, source changes will not be observed.\n   */\n  get isActive() {\n    return this.ownerDocument === document && !this.isPreview\n  }\n\n  /**\n   * Sets the active state of the frame.\n   *\n   * If inactive, source changes will not be observed.\n   */\n  get isPreview() {\n    return this.ownerDocument?.documentElement?.hasAttribute(\"data-turbo-preview\")\n  }\n}\n\nfunction frameLoadingStyleFromString(style) {\n  switch (style.toLowerCase()) {\n    case \"lazy\":\n      return FrameLoadingStyle.lazy\n    default:\n      return FrameLoadingStyle.eager\n  }\n}\n\nfunction expandURL(locatable) {\n  return new URL(locatable.toString(), document.baseURI)\n}\n\nfunction getAnchor(url) {\n  let anchorMatch;\n  if (url.hash) {\n    return url.hash.slice(1)\n    // eslint-disable-next-line no-cond-assign\n  } else if ((anchorMatch = url.href.match(/#(.*)$/))) {\n    return anchorMatch[1]\n  }\n}\n\nfunction getAction$1(form, submitter) {\n  const action = submitter?.getAttribute(\"formaction\") || form.getAttribute(\"action\") || form.action;\n\n  return expandURL(action)\n}\n\nfunction getExtension(url) {\n  return (getLastPathComponent(url).match(/\\.[^.]*$/) || [])[0] || \"\"\n}\n\nfunction isHTML(url) {\n  return !!getExtension(url).match(/^(?:|\\.(?:htm|html|xhtml|php))$/)\n}\n\nfunction isPrefixedBy(baseURL, url) {\n  const prefix = getPrefix(url);\n  return baseURL.href === expandURL(prefix).href || baseURL.href.startsWith(prefix)\n}\n\nfunction locationIsVisitable(location, rootLocation) {\n  return isPrefixedBy(location, rootLocation) && isHTML(location)\n}\n\nfunction getRequestURL(url) {\n  const anchor = getAnchor(url);\n  return anchor != null ? url.href.slice(0, -(anchor.length + 1)) : url.href\n}\n\nfunction toCacheKey(url) {\n  return getRequestURL(url)\n}\n\nfunction urlsAreEqual(left, right) {\n  return expandURL(left).href == expandURL(right).href\n}\n\nfunction getPathComponents(url) {\n  return url.pathname.split(\"/\").slice(1)\n}\n\nfunction getLastPathComponent(url) {\n  return getPathComponents(url).slice(-1)[0]\n}\n\nfunction getPrefix(url) {\n  return addTrailingSlash(url.origin + url.pathname)\n}\n\nfunction addTrailingSlash(value) {\n  return value.endsWith(\"/\") ? value : value + \"/\"\n}\n\nclass FetchResponse {\n  constructor(response) {\n    this.response = response;\n  }\n\n  get succeeded() {\n    return this.response.ok\n  }\n\n  get failed() {\n    return !this.succeeded\n  }\n\n  get clientError() {\n    return this.statusCode >= 400 && this.statusCode <= 499\n  }\n\n  get serverError() {\n    return this.statusCode >= 500 && this.statusCode <= 599\n  }\n\n  get redirected() {\n    return this.response.redirected\n  }\n\n  get location() {\n    return expandURL(this.response.url)\n  }\n\n  get isHTML() {\n    return this.contentType && this.contentType.match(/^(?:text\\/([^\\s;,]+\\b)?html|application\\/xhtml\\+xml)\\b/)\n  }\n\n  get statusCode() {\n    return this.response.status\n  }\n\n  get contentType() {\n    return this.header(\"Content-Type\")\n  }\n\n  get responseText() {\n    return this.response.clone().text()\n  }\n\n  get responseHTML() {\n    if (this.isHTML) {\n      return this.response.clone().text()\n    } else {\n      return Promise.resolve(undefined)\n    }\n  }\n\n  header(name) {\n    return this.response.headers.get(name)\n  }\n}\n\nfunction activateScriptElement(element) {\n  if (element.getAttribute(\"data-turbo-eval\") == \"false\") {\n    return element\n  } else {\n    const createdScriptElement = document.createElement(\"script\");\n    const cspNonce = getMetaContent(\"csp-nonce\");\n    if (cspNonce) {\n      createdScriptElement.nonce = cspNonce;\n    }\n    createdScriptElement.textContent = element.textContent;\n    createdScriptElement.async = false;\n    copyElementAttributes(createdScriptElement, element);\n    return createdScriptElement\n  }\n}\n\nfunction copyElementAttributes(destinationElement, sourceElement) {\n  for (const { name, value } of sourceElement.attributes) {\n    destinationElement.setAttribute(name, value);\n  }\n}\n\nfunction createDocumentFragment(html) {\n  const template = document.createElement(\"template\");\n  template.innerHTML = html;\n  return template.content\n}\n\nfunction dispatch(eventName, { target, cancelable, detail } = {}) {\n  const event = new CustomEvent(eventName, {\n    cancelable,\n    bubbles: true,\n    composed: true,\n    detail\n  });\n\n  if (target && target.isConnected) {\n    target.dispatchEvent(event);\n  } else {\n    document.documentElement.dispatchEvent(event);\n  }\n\n  return event\n}\n\nfunction nextRepaint() {\n  if (document.visibilityState === \"hidden\") {\n    return nextEventLoopTick()\n  } else {\n    return nextAnimationFrame()\n  }\n}\n\nfunction nextAnimationFrame() {\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()))\n}\n\nfunction nextEventLoopTick() {\n  return new Promise((resolve) => setTimeout(() => resolve(), 0))\n}\n\nfunction nextMicrotask() {\n  return Promise.resolve()\n}\n\nfunction parseHTMLDocument(html = \"\") {\n  return new DOMParser().parseFromString(html, \"text/html\")\n}\n\nfunction unindent(strings, ...values) {\n  const lines = interpolate(strings, values).replace(/^\\n/, \"\").split(\"\\n\");\n  const match = lines[0].match(/^\\s+/);\n  const indent = match ? match[0].length : 0;\n  return lines.map((line) => line.slice(indent)).join(\"\\n\")\n}\n\nfunction interpolate(strings, values) {\n  return strings.reduce((result, string, i) => {\n    const value = values[i] == undefined ? \"\" : values[i];\n    return result + string + value\n  }, \"\")\n}\n\nfunction uuid() {\n  return Array.from({ length: 36 })\n    .map((_, i) => {\n      if (i == 8 || i == 13 || i == 18 || i == 23) {\n        return \"-\"\n      } else if (i == 14) {\n        return \"4\"\n      } else if (i == 19) {\n        return (Math.floor(Math.random() * 4) + 8).toString(16)\n      } else {\n        return Math.floor(Math.random() * 15).toString(16)\n      }\n    })\n    .join(\"\")\n}\n\nfunction getAttribute(attributeName, ...elements) {\n  for (const value of elements.map((element) => element?.getAttribute(attributeName))) {\n    if (typeof value == \"string\") return value\n  }\n\n  return null\n}\n\nfunction hasAttribute(attributeName, ...elements) {\n  return elements.some((element) => element && element.hasAttribute(attributeName))\n}\n\nfunction markAsBusy(...elements) {\n  for (const element of elements) {\n    if (element.localName == \"turbo-frame\") {\n      element.setAttribute(\"busy\", \"\");\n    }\n    element.setAttribute(\"aria-busy\", \"true\");\n  }\n}\n\nfunction clearBusyState(...elements) {\n  for (const element of elements) {\n    if (element.localName == \"turbo-frame\") {\n      element.removeAttribute(\"busy\");\n    }\n\n    element.removeAttribute(\"aria-busy\");\n  }\n}\n\nfunction waitForLoad(element, timeoutInMilliseconds = 2000) {\n  return new Promise((resolve) => {\n    const onComplete = () => {\n      element.removeEventListener(\"error\", onComplete);\n      element.removeEventListener(\"load\", onComplete);\n      resolve();\n    };\n\n    element.addEventListener(\"load\", onComplete, { once: true });\n    element.addEventListener(\"error\", onComplete, { once: true });\n    setTimeout(resolve, timeoutInMilliseconds);\n  })\n}\n\nfunction getHistoryMethodForAction(action) {\n  switch (action) {\n    case \"replace\":\n      return history.replaceState\n    case \"advance\":\n    case \"restore\":\n      return history.pushState\n  }\n}\n\nfunction isAction(action) {\n  return action == \"advance\" || action == \"replace\" || action == \"restore\"\n}\n\nfunction getVisitAction(...elements) {\n  const action = getAttribute(\"data-turbo-action\", ...elements);\n\n  return isAction(action) ? action : null\n}\n\nfunction getMetaElement(name) {\n  return document.querySelector(`meta[name=\"${name}\"]`)\n}\n\nfunction getMetaContent(name) {\n  const element = getMetaElement(name);\n  return element && element.content\n}\n\nfunction setMetaContent(name, content) {\n  let element = getMetaElement(name);\n\n  if (!element) {\n    element = document.createElement(\"meta\");\n    element.setAttribute(\"name\", name);\n\n    document.head.appendChild(element);\n  }\n\n  element.setAttribute(\"content\", content);\n\n  return element\n}\n\nfunction findClosestRecursively(element, selector) {\n  if (element instanceof Element) {\n    return (\n      element.closest(selector) || findClosestRecursively(element.assignedSlot || element.getRootNode()?.host, selector)\n    )\n  }\n}\n\nfunction elementIsFocusable(element) {\n  const inertDisabledOrHidden = \"[inert], :disabled, [hidden], details:not([open]), dialog:not([open])\";\n\n  return !!element && element.closest(inertDisabledOrHidden) == null && typeof element.focus == \"function\"\n}\n\nfunction queryAutofocusableElement(elementOrDocumentFragment) {\n  return Array.from(elementOrDocumentFragment.querySelectorAll(\"[autofocus]\")).find(elementIsFocusable)\n}\n\nasync function around(callback, reader) {\n  const before = reader();\n\n  callback();\n\n  await nextAnimationFrame();\n\n  const after = reader();\n\n  return [before, after]\n}\n\nfunction doesNotTargetIFrame(anchor) {\n  if (anchor.hasAttribute(\"target\")) {\n    for (const element of document.getElementsByName(anchor.target)) {\n      if (element instanceof HTMLIFrameElement) return false\n    }\n  }\n\n  return true\n}\n\nfunction findLinkFromClickTarget(target) {\n  return findClosestRecursively(target, \"a[href]:not([target^=_]):not([download])\")\n}\n\nfunction getLocationForLink(link) {\n  return expandURL(link.getAttribute(\"href\") || \"\")\n}\n\nfunction debounce(fn, delay) {\n  let timeoutId = null;\n\n  return (...args) => {\n    const callback = () => fn.apply(this, args);\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(callback, delay);\n  }\n}\n\nclass LimitedSet extends Set {\n  constructor(maxSize) {\n    super();\n    this.maxSize = maxSize;\n  }\n\n  add(value) {\n    if (this.size >= this.maxSize) {\n      const iterator = this.values();\n      const oldestValue = iterator.next().value;\n      this.delete(oldestValue);\n    }\n    super.add(value);\n  }\n}\n\nconst recentRequests = new LimitedSet(20);\n\nconst nativeFetch = window.fetch;\n\nfunction fetchWithTurboHeaders(url, options = {}) {\n  const modifiedHeaders = new Headers(options.headers || {});\n  const requestUID = uuid();\n  recentRequests.add(requestUID);\n  modifiedHeaders.append(\"X-Turbo-Request-Id\", requestUID);\n\n  return nativeFetch(url, {\n    ...options,\n    headers: modifiedHeaders\n  })\n}\n\nfunction fetchMethodFromString(method) {\n  switch (method.toLowerCase()) {\n    case \"get\":\n      return FetchMethod.get\n    case \"post\":\n      return FetchMethod.post\n    case \"put\":\n      return FetchMethod.put\n    case \"patch\":\n      return FetchMethod.patch\n    case \"delete\":\n      return FetchMethod.delete\n  }\n}\n\nconst FetchMethod = {\n  get: \"get\",\n  post: \"post\",\n  put: \"put\",\n  patch: \"patch\",\n  delete: \"delete\"\n};\n\nfunction fetchEnctypeFromString(encoding) {\n  switch (encoding.toLowerCase()) {\n    case FetchEnctype.multipart:\n      return FetchEnctype.multipart\n    case FetchEnctype.plain:\n      return FetchEnctype.plain\n    default:\n      return FetchEnctype.urlEncoded\n  }\n}\n\nconst FetchEnctype = {\n  urlEncoded: \"application/x-www-form-urlencoded\",\n  multipart: \"multipart/form-data\",\n  plain: \"text/plain\"\n};\n\nclass FetchRequest {\n  abortController = new AbortController()\n  #resolveRequestPromise = (_value) => {}\n\n  constructor(delegate, method, location, requestBody = new URLSearchParams(), target = null, enctype = FetchEnctype.urlEncoded) {\n    const [url, body] = buildResourceAndBody(expandURL(location), method, requestBody, enctype);\n\n    this.delegate = delegate;\n    this.url = url;\n    this.target = target;\n    this.fetchOptions = {\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      method: method,\n      headers: { ...this.defaultHeaders },\n      body: body,\n      signal: this.abortSignal,\n      referrer: this.delegate.referrer?.href\n    };\n    this.enctype = enctype;\n  }\n\n  get method() {\n    return this.fetchOptions.method\n  }\n\n  set method(value) {\n    const fetchBody = this.isSafe ? this.url.searchParams : this.fetchOptions.body || new FormData();\n    const fetchMethod = fetchMethodFromString(value) || FetchMethod.get;\n\n    this.url.search = \"\";\n\n    const [url, body] = buildResourceAndBody(this.url, fetchMethod, fetchBody, this.enctype);\n\n    this.url = url;\n    this.fetchOptions.body = body;\n    this.fetchOptions.method = fetchMethod;\n  }\n\n  get headers() {\n    return this.fetchOptions.headers\n  }\n\n  set headers(value) {\n    this.fetchOptions.headers = value;\n  }\n\n  get body() {\n    if (this.isSafe) {\n      return this.url.searchParams\n    } else {\n      return this.fetchOptions.body\n    }\n  }\n\n  set body(value) {\n    this.fetchOptions.body = value;\n  }\n\n  get location() {\n    return this.url\n  }\n\n  get params() {\n    return this.url.searchParams\n  }\n\n  get entries() {\n    return this.body ? Array.from(this.body.entries()) : []\n  }\n\n  cancel() {\n    this.abortController.abort();\n  }\n\n  async perform() {\n    const { fetchOptions } = this;\n    this.delegate.prepareRequest(this);\n    const event = await this.#allowRequestToBeIntercepted(fetchOptions);\n    try {\n      this.delegate.requestStarted(this);\n\n      if (event.detail.fetchRequest) {\n        this.response = event.detail.fetchRequest.response;\n      } else {\n        this.response = fetchWithTurboHeaders(this.url.href, fetchOptions);\n      }\n\n      const response = await this.response;\n      return await this.receive(response)\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        if (this.#willDelegateErrorHandling(error)) {\n          this.delegate.requestErrored(this, error);\n        }\n        throw error\n      }\n    } finally {\n      this.delegate.requestFinished(this);\n    }\n  }\n\n  async receive(response) {\n    const fetchResponse = new FetchResponse(response);\n    const event = dispatch(\"turbo:before-fetch-response\", {\n      cancelable: true,\n      detail: { fetchResponse },\n      target: this.target\n    });\n    if (event.defaultPrevented) {\n      this.delegate.requestPreventedHandlingResponse(this, fetchResponse);\n    } else if (fetchResponse.succeeded) {\n      this.delegate.requestSucceededWithResponse(this, fetchResponse);\n    } else {\n      this.delegate.requestFailedWithResponse(this, fetchResponse);\n    }\n    return fetchResponse\n  }\n\n  get defaultHeaders() {\n    return {\n      Accept: \"text/html, application/xhtml+xml\"\n    }\n  }\n\n  get isSafe() {\n    return isSafe(this.method)\n  }\n\n  get abortSignal() {\n    return this.abortController.signal\n  }\n\n  acceptResponseType(mimeType) {\n    this.headers[\"Accept\"] = [mimeType, this.headers[\"Accept\"]].join(\", \");\n  }\n\n  async #allowRequestToBeIntercepted(fetchOptions) {\n    const requestInterception = new Promise((resolve) => (this.#resolveRequestPromise = resolve));\n    const event = dispatch(\"turbo:before-fetch-request\", {\n      cancelable: true,\n      detail: {\n        fetchOptions,\n        url: this.url,\n        resume: this.#resolveRequestPromise\n      },\n      target: this.target\n    });\n    this.url = event.detail.url;\n    if (event.defaultPrevented) await requestInterception;\n\n    return event\n  }\n\n  #willDelegateErrorHandling(error) {\n    const event = dispatch(\"turbo:fetch-request-error\", {\n      target: this.target,\n      cancelable: true,\n      detail: { request: this, error: error }\n    });\n\n    return !event.defaultPrevented\n  }\n}\n\nfunction isSafe(fetchMethod) {\n  return fetchMethodFromString(fetchMethod) == FetchMethod.get\n}\n\nfunction buildResourceAndBody(resource, method, requestBody, enctype) {\n  const searchParams =\n    Array.from(requestBody).length > 0 ? new URLSearchParams(entriesExcludingFiles(requestBody)) : resource.searchParams;\n\n  if (isSafe(method)) {\n    return [mergeIntoURLSearchParams(resource, searchParams), null]\n  } else if (enctype == FetchEnctype.urlEncoded) {\n    return [resource, searchParams]\n  } else {\n    return [resource, requestBody]\n  }\n}\n\nfunction entriesExcludingFiles(requestBody) {\n  const entries = [];\n\n  for (const [name, value] of requestBody) {\n    if (value instanceof File) continue\n    else entries.push([name, value]);\n  }\n\n  return entries\n}\n\nfunction mergeIntoURLSearchParams(url, requestBody) {\n  const searchParams = new URLSearchParams(entriesExcludingFiles(requestBody));\n\n  url.search = searchParams.toString();\n\n  return url\n}\n\nclass AppearanceObserver {\n  started = false\n\n  constructor(delegate, element) {\n    this.delegate = delegate;\n    this.element = element;\n    this.intersectionObserver = new IntersectionObserver(this.intersect);\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true;\n      this.intersectionObserver.observe(this.element);\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false;\n      this.intersectionObserver.unobserve(this.element);\n    }\n  }\n\n  intersect = (entries) => {\n    const lastEntry = entries.slice(-1)[0];\n    if (lastEntry?.isIntersecting) {\n      this.delegate.elementAppearedInViewport(this.element);\n    }\n  }\n}\n\nclass StreamMessage {\n  static contentType = \"text/vnd.turbo-stream.html\"\n\n  static wrap(message) {\n    if (typeof message == \"string\") {\n      return new this(createDocumentFragment(message))\n    } else {\n      return message\n    }\n  }\n\n  constructor(fragment) {\n    this.fragment = importStreamElements(fragment);\n  }\n}\n\nfunction importStreamElements(fragment) {\n  for (const element of fragment.querySelectorAll(\"turbo-stream\")) {\n    const streamElement = document.importNode(element, true);\n\n    for (const inertScriptElement of streamElement.templateElement.content.querySelectorAll(\"script\")) {\n      inertScriptElement.replaceWith(activateScriptElement(inertScriptElement));\n    }\n\n    element.replaceWith(streamElement);\n  }\n\n  return fragment\n}\n\nconst PREFETCH_DELAY = 100;\n\nclass PrefetchCache {\n  #prefetchTimeout = null\n  #prefetched = null\n\n  get(url) {\n    if (this.#prefetched && this.#prefetched.url === url && this.#prefetched.expire > Date.now()) {\n      return this.#prefetched.request\n    }\n  }\n\n  setLater(url, request, ttl) {\n    this.clear();\n\n    this.#prefetchTimeout = setTimeout(() => {\n      request.perform();\n      this.set(url, request, ttl);\n      this.#prefetchTimeout = null;\n    }, PREFETCH_DELAY);\n  }\n\n  set(url, request, ttl) {\n    this.#prefetched = { url, request, expire: new Date(new Date().getTime() + ttl) };\n  }\n\n  clear() {\n    if (this.#prefetchTimeout) clearTimeout(this.#prefetchTimeout);\n    this.#prefetched = null;\n  }\n}\n\nconst cacheTtl = 10 * 1000;\nconst prefetchCache = new PrefetchCache();\n\nconst FormSubmissionState = {\n  initialized: \"initialized\",\n  requesting: \"requesting\",\n  waiting: \"waiting\",\n  receiving: \"receiving\",\n  stopping: \"stopping\",\n  stopped: \"stopped\"\n};\n\nclass FormSubmission {\n  state = FormSubmissionState.initialized\n\n  static confirmMethod(message, _element, _submitter) {\n    return Promise.resolve(confirm(message))\n  }\n\n  constructor(delegate, formElement, submitter, mustRedirect = false) {\n    const method = getMethod(formElement, submitter);\n    const action = getAction(getFormAction(formElement, submitter), method);\n    const body = buildFormData(formElement, submitter);\n    const enctype = getEnctype(formElement, submitter);\n\n    this.delegate = delegate;\n    this.formElement = formElement;\n    this.submitter = submitter;\n    this.fetchRequest = new FetchRequest(this, method, action, body, formElement, enctype);\n    this.mustRedirect = mustRedirect;\n  }\n\n  get method() {\n    return this.fetchRequest.method\n  }\n\n  set method(value) {\n    this.fetchRequest.method = value;\n  }\n\n  get action() {\n    return this.fetchRequest.url.toString()\n  }\n\n  set action(value) {\n    this.fetchRequest.url = expandURL(value);\n  }\n\n  get body() {\n    return this.fetchRequest.body\n  }\n\n  get enctype() {\n    return this.fetchRequest.enctype\n  }\n\n  get isSafe() {\n    return this.fetchRequest.isSafe\n  }\n\n  get location() {\n    return this.fetchRequest.url\n  }\n\n  // The submission process\n\n  async start() {\n    const { initialized, requesting } = FormSubmissionState;\n    const confirmationMessage = getAttribute(\"data-turbo-confirm\", this.submitter, this.formElement);\n\n    if (typeof confirmationMessage === \"string\") {\n      const answer = await FormSubmission.confirmMethod(confirmationMessage, this.formElement, this.submitter);\n      if (!answer) {\n        return\n      }\n    }\n\n    if (this.state == initialized) {\n      this.state = requesting;\n      return this.fetchRequest.perform()\n    }\n  }\n\n  stop() {\n    const { stopping, stopped } = FormSubmissionState;\n    if (this.state != stopping && this.state != stopped) {\n      this.state = stopping;\n      this.fetchRequest.cancel();\n      return true\n    }\n  }\n\n  // Fetch request delegate\n\n  prepareRequest(request) {\n    if (!request.isSafe) {\n      const token = getCookieValue(getMetaContent(\"csrf-param\")) || getMetaContent(\"csrf-token\");\n      if (token) {\n        request.headers[\"X-CSRF-Token\"] = token;\n      }\n    }\n\n    if (this.requestAcceptsTurboStreamResponse(request)) {\n      request.acceptResponseType(StreamMessage.contentType);\n    }\n  }\n\n  requestStarted(_request) {\n    this.state = FormSubmissionState.waiting;\n    this.submitter?.setAttribute(\"disabled\", \"\");\n    this.setSubmitsWith();\n    markAsBusy(this.formElement);\n    dispatch(\"turbo:submit-start\", {\n      target: this.formElement,\n      detail: { formSubmission: this }\n    });\n    this.delegate.formSubmissionStarted(this);\n  }\n\n  requestPreventedHandlingResponse(request, response) {\n    prefetchCache.clear();\n\n    this.result = { success: response.succeeded, fetchResponse: response };\n  }\n\n  requestSucceededWithResponse(request, response) {\n    if (response.clientError || response.serverError) {\n      this.delegate.formSubmissionFailedWithResponse(this, response);\n      return\n    }\n\n    prefetchCache.clear();\n\n    if (this.requestMustRedirect(request) && responseSucceededWithoutRedirect(response)) {\n      const error = new Error(\"Form responses must redirect to another location\");\n      this.delegate.formSubmissionErrored(this, error);\n    } else {\n      this.state = FormSubmissionState.receiving;\n      this.result = { success: true, fetchResponse: response };\n      this.delegate.formSubmissionSucceededWithResponse(this, response);\n    }\n  }\n\n  requestFailedWithResponse(request, response) {\n    this.result = { success: false, fetchResponse: response };\n    this.delegate.formSubmissionFailedWithResponse(this, response);\n  }\n\n  requestErrored(request, error) {\n    this.result = { success: false, error };\n    this.delegate.formSubmissionErrored(this, error);\n  }\n\n  requestFinished(_request) {\n    this.state = FormSubmissionState.stopped;\n    this.submitter?.removeAttribute(\"disabled\");\n    this.resetSubmitterText();\n    clearBusyState(this.formElement);\n    dispatch(\"turbo:submit-end\", {\n      target: this.formElement,\n      detail: { formSubmission: this, ...this.result }\n    });\n    this.delegate.formSubmissionFinished(this);\n  }\n\n  // Private\n\n  setSubmitsWith() {\n    if (!this.submitter || !this.submitsWith) return\n\n    if (this.submitter.matches(\"button\")) {\n      this.originalSubmitText = this.submitter.innerHTML;\n      this.submitter.innerHTML = this.submitsWith;\n    } else if (this.submitter.matches(\"input\")) {\n      const input = this.submitter;\n      this.originalSubmitText = input.value;\n      input.value = this.submitsWith;\n    }\n  }\n\n  resetSubmitterText() {\n    if (!this.submitter || !this.originalSubmitText) return\n\n    if (this.submitter.matches(\"button\")) {\n      this.submitter.innerHTML = this.originalSubmitText;\n    } else if (this.submitter.matches(\"input\")) {\n      const input = this.submitter;\n      input.value = this.originalSubmitText;\n    }\n  }\n\n  requestMustRedirect(request) {\n    return !request.isSafe && this.mustRedirect\n  }\n\n  requestAcceptsTurboStreamResponse(request) {\n    return !request.isSafe || hasAttribute(\"data-turbo-stream\", this.submitter, this.formElement)\n  }\n\n  get submitsWith() {\n    return this.submitter?.getAttribute(\"data-turbo-submits-with\")\n  }\n}\n\nfunction buildFormData(formElement, submitter) {\n  const formData = new FormData(formElement);\n  const name = submitter?.getAttribute(\"name\");\n  const value = submitter?.getAttribute(\"value\");\n\n  if (name) {\n    formData.append(name, value || \"\");\n  }\n\n  return formData\n}\n\nfunction getCookieValue(cookieName) {\n  if (cookieName != null) {\n    const cookies = document.cookie ? document.cookie.split(\"; \") : [];\n    const cookie = cookies.find((cookie) => cookie.startsWith(cookieName));\n    if (cookie) {\n      const value = cookie.split(\"=\").slice(1).join(\"=\");\n      return value ? decodeURIComponent(value) : undefined\n    }\n  }\n}\n\nfunction responseSucceededWithoutRedirect(response) {\n  return response.statusCode == 200 && !response.redirected\n}\n\nfunction getFormAction(formElement, submitter) {\n  const formElementAction = typeof formElement.action === \"string\" ? formElement.action : null;\n\n  if (submitter?.hasAttribute(\"formaction\")) {\n    return submitter.getAttribute(\"formaction\") || \"\"\n  } else {\n    return formElement.getAttribute(\"action\") || formElementAction || \"\"\n  }\n}\n\nfunction getAction(formAction, fetchMethod) {\n  const action = expandURL(formAction);\n\n  if (isSafe(fetchMethod)) {\n    action.search = \"\";\n  }\n\n  return action\n}\n\nfunction getMethod(formElement, submitter) {\n  const method = submitter?.getAttribute(\"formmethod\") || formElement.getAttribute(\"method\") || \"\";\n  return fetchMethodFromString(method.toLowerCase()) || FetchMethod.get\n}\n\nfunction getEnctype(formElement, submitter) {\n  return fetchEnctypeFromString(submitter?.getAttribute(\"formenctype\") || formElement.enctype)\n}\n\nclass Snapshot {\n  constructor(element) {\n    this.element = element;\n  }\n\n  get activeElement() {\n    return this.element.ownerDocument.activeElement\n  }\n\n  get children() {\n    return [...this.element.children]\n  }\n\n  hasAnchor(anchor) {\n    return this.getElementForAnchor(anchor) != null\n  }\n\n  getElementForAnchor(anchor) {\n    return anchor ? this.element.querySelector(`[id='${anchor}'], a[name='${anchor}']`) : null\n  }\n\n  get isConnected() {\n    return this.element.isConnected\n  }\n\n  get firstAutofocusableElement() {\n    return queryAutofocusableElement(this.element)\n  }\n\n  get permanentElements() {\n    return queryPermanentElementsAll(this.element)\n  }\n\n  getPermanentElementById(id) {\n    return getPermanentElementById(this.element, id)\n  }\n\n  getPermanentElementMapForSnapshot(snapshot) {\n    const permanentElementMap = {};\n\n    for (const currentPermanentElement of this.permanentElements) {\n      const { id } = currentPermanentElement;\n      const newPermanentElement = snapshot.getPermanentElementById(id);\n      if (newPermanentElement) {\n        permanentElementMap[id] = [currentPermanentElement, newPermanentElement];\n      }\n    }\n\n    return permanentElementMap\n  }\n}\n\nfunction getPermanentElementById(node, id) {\n  return node.querySelector(`#${id}[data-turbo-permanent]`)\n}\n\nfunction queryPermanentElementsAll(node) {\n  return node.querySelectorAll(\"[id][data-turbo-permanent]\")\n}\n\nclass FormSubmitObserver {\n  started = false\n\n  constructor(delegate, eventTarget) {\n    this.delegate = delegate;\n    this.eventTarget = eventTarget;\n  }\n\n  start() {\n    if (!this.started) {\n      this.eventTarget.addEventListener(\"submit\", this.submitCaptured, true);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.eventTarget.removeEventListener(\"submit\", this.submitCaptured, true);\n      this.started = false;\n    }\n  }\n\n  submitCaptured = () => {\n    this.eventTarget.removeEventListener(\"submit\", this.submitBubbled, false);\n    this.eventTarget.addEventListener(\"submit\", this.submitBubbled, false);\n  }\n\n  submitBubbled = (event) => {\n    if (!event.defaultPrevented) {\n      const form = event.target instanceof HTMLFormElement ? event.target : undefined;\n      const submitter = event.submitter || undefined;\n\n      if (\n        form &&\n        submissionDoesNotDismissDialog(form, submitter) &&\n        submissionDoesNotTargetIFrame(form, submitter) &&\n        this.delegate.willSubmitForm(form, submitter)\n      ) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        this.delegate.formSubmitted(form, submitter);\n      }\n    }\n  }\n}\n\nfunction submissionDoesNotDismissDialog(form, submitter) {\n  const method = submitter?.getAttribute(\"formmethod\") || form.getAttribute(\"method\");\n\n  return method != \"dialog\"\n}\n\nfunction submissionDoesNotTargetIFrame(form, submitter) {\n  if (submitter?.hasAttribute(\"formtarget\") || form.hasAttribute(\"target\")) {\n    const target = submitter?.getAttribute(\"formtarget\") || form.target;\n\n    for (const element of document.getElementsByName(target)) {\n      if (element instanceof HTMLIFrameElement) return false\n    }\n\n    return true\n  } else {\n    return true\n  }\n}\n\nclass View {\n  #resolveRenderPromise = (_value) => {}\n  #resolveInterceptionPromise = (_value) => {}\n\n  constructor(delegate, element) {\n    this.delegate = delegate;\n    this.element = element;\n  }\n\n  // Scrolling\n\n  scrollToAnchor(anchor) {\n    const element = this.snapshot.getElementForAnchor(anchor);\n    if (element) {\n      this.scrollToElement(element);\n      this.focusElement(element);\n    } else {\n      this.scrollToPosition({ x: 0, y: 0 });\n    }\n  }\n\n  scrollToAnchorFromLocation(location) {\n    this.scrollToAnchor(getAnchor(location));\n  }\n\n  scrollToElement(element) {\n    element.scrollIntoView();\n  }\n\n  focusElement(element) {\n    if (element instanceof HTMLElement) {\n      if (element.hasAttribute(\"tabindex\")) {\n        element.focus();\n      } else {\n        element.setAttribute(\"tabindex\", \"-1\");\n        element.focus();\n        element.removeAttribute(\"tabindex\");\n      }\n    }\n  }\n\n  scrollToPosition({ x, y }) {\n    this.scrollRoot.scrollTo(x, y);\n  }\n\n  scrollToTop() {\n    this.scrollToPosition({ x: 0, y: 0 });\n  }\n\n  get scrollRoot() {\n    return window\n  }\n\n  // Rendering\n\n  async render(renderer) {\n    const { isPreview, shouldRender, willRender, newSnapshot: snapshot } = renderer;\n\n    // A workaround to ignore tracked element mismatch reloads when performing\n    // a promoted Visit from a frame navigation\n    const shouldInvalidate = willRender;\n\n    if (shouldRender) {\n      try {\n        this.renderPromise = new Promise((resolve) => (this.#resolveRenderPromise = resolve));\n        this.renderer = renderer;\n        await this.prepareToRenderSnapshot(renderer);\n\n        const renderInterception = new Promise((resolve) => (this.#resolveInterceptionPromise = resolve));\n        const options = { resume: this.#resolveInterceptionPromise, render: this.renderer.renderElement, renderMethod: this.renderer.renderMethod };\n        const immediateRender = this.delegate.allowsImmediateRender(snapshot, options);\n        if (!immediateRender) await renderInterception;\n\n        await this.renderSnapshot(renderer);\n        this.delegate.viewRenderedSnapshot(snapshot, isPreview, this.renderer.renderMethod);\n        this.delegate.preloadOnLoadLinksForView(this.element);\n        this.finishRenderingSnapshot(renderer);\n      } finally {\n        delete this.renderer;\n        this.#resolveRenderPromise(undefined);\n        delete this.renderPromise;\n      }\n    } else if (shouldInvalidate) {\n      this.invalidate(renderer.reloadReason);\n    }\n  }\n\n  invalidate(reason) {\n    this.delegate.viewInvalidated(reason);\n  }\n\n  async prepareToRenderSnapshot(renderer) {\n    this.markAsPreview(renderer.isPreview);\n    await renderer.prepareToRender();\n  }\n\n  markAsPreview(isPreview) {\n    if (isPreview) {\n      this.element.setAttribute(\"data-turbo-preview\", \"\");\n    } else {\n      this.element.removeAttribute(\"data-turbo-preview\");\n    }\n  }\n\n  markVisitDirection(direction) {\n    this.element.setAttribute(\"data-turbo-visit-direction\", direction);\n  }\n\n  unmarkVisitDirection() {\n    this.element.removeAttribute(\"data-turbo-visit-direction\");\n  }\n\n  async renderSnapshot(renderer) {\n    await renderer.render();\n  }\n\n  finishRenderingSnapshot(renderer) {\n    renderer.finishRendering();\n  }\n}\n\nclass FrameView extends View {\n  missing() {\n    this.element.innerHTML = `<strong class=\"turbo-frame-error\">Content missing</strong>`;\n  }\n\n  get snapshot() {\n    return new Snapshot(this.element)\n  }\n}\n\nclass LinkInterceptor {\n  constructor(delegate, element) {\n    this.delegate = delegate;\n    this.element = element;\n  }\n\n  start() {\n    this.element.addEventListener(\"click\", this.clickBubbled);\n    document.addEventListener(\"turbo:click\", this.linkClicked);\n    document.addEventListener(\"turbo:before-visit\", this.willVisit);\n  }\n\n  stop() {\n    this.element.removeEventListener(\"click\", this.clickBubbled);\n    document.removeEventListener(\"turbo:click\", this.linkClicked);\n    document.removeEventListener(\"turbo:before-visit\", this.willVisit);\n  }\n\n  clickBubbled = (event) => {\n    if (this.respondsToEventTarget(event.target)) {\n      this.clickEvent = event;\n    } else {\n      delete this.clickEvent;\n    }\n  }\n\n  linkClicked = (event) => {\n    if (this.clickEvent && this.respondsToEventTarget(event.target) && event.target instanceof Element) {\n      if (this.delegate.shouldInterceptLinkClick(event.target, event.detail.url, event.detail.originalEvent)) {\n        this.clickEvent.preventDefault();\n        event.preventDefault();\n        this.delegate.linkClickIntercepted(event.target, event.detail.url, event.detail.originalEvent);\n      }\n    }\n    delete this.clickEvent;\n  }\n\n  willVisit = (_event) => {\n    delete this.clickEvent;\n  }\n\n  respondsToEventTarget(target) {\n    const element = target instanceof Element ? target : target instanceof Node ? target.parentElement : null;\n    return element && element.closest(\"turbo-frame, html\") == this.element\n  }\n}\n\nclass LinkClickObserver {\n  started = false\n\n  constructor(delegate, eventTarget) {\n    this.delegate = delegate;\n    this.eventTarget = eventTarget;\n  }\n\n  start() {\n    if (!this.started) {\n      this.eventTarget.addEventListener(\"click\", this.clickCaptured, true);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.eventTarget.removeEventListener(\"click\", this.clickCaptured, true);\n      this.started = false;\n    }\n  }\n\n  clickCaptured = () => {\n    this.eventTarget.removeEventListener(\"click\", this.clickBubbled, false);\n    this.eventTarget.addEventListener(\"click\", this.clickBubbled, false);\n  }\n\n  clickBubbled = (event) => {\n    if (event instanceof MouseEvent && this.clickEventIsSignificant(event)) {\n      const target = (event.composedPath && event.composedPath()[0]) || event.target;\n      const link = findLinkFromClickTarget(target);\n      if (link && doesNotTargetIFrame(link)) {\n        const location = getLocationForLink(link);\n        if (this.delegate.willFollowLinkToLocation(link, location, event)) {\n          event.preventDefault();\n          this.delegate.followedLinkToLocation(link, location);\n        }\n      }\n    }\n  }\n\n  clickEventIsSignificant(event) {\n    return !(\n      (event.target && event.target.isContentEditable) ||\n      event.defaultPrevented ||\n      event.which > 1 ||\n      event.altKey ||\n      event.ctrlKey ||\n      event.metaKey ||\n      event.shiftKey\n    )\n  }\n}\n\nclass FormLinkClickObserver {\n  constructor(delegate, element) {\n    this.delegate = delegate;\n    this.linkInterceptor = new LinkClickObserver(this, element);\n  }\n\n  start() {\n    this.linkInterceptor.start();\n  }\n\n  stop() {\n    this.linkInterceptor.stop();\n  }\n\n  // Link hover observer delegate\n\n  canPrefetchRequestToLocation(link, location) {\n    return false\n  }\n\n  prefetchAndCacheRequestToLocation(link, location) {\n    return\n  }\n\n  // Link click observer delegate\n\n  willFollowLinkToLocation(link, location, originalEvent) {\n    return (\n      this.delegate.willSubmitFormLinkToLocation(link, location, originalEvent) &&\n      (link.hasAttribute(\"data-turbo-method\") || link.hasAttribute(\"data-turbo-stream\"))\n    )\n  }\n\n  followedLinkToLocation(link, location) {\n    const form = document.createElement(\"form\");\n\n    const type = \"hidden\";\n    for (const [name, value] of location.searchParams) {\n      form.append(Object.assign(document.createElement(\"input\"), { type, name, value }));\n    }\n\n    const action = Object.assign(location, { search: \"\" });\n    form.setAttribute(\"data-turbo\", \"true\");\n    form.setAttribute(\"action\", action.href);\n    form.setAttribute(\"hidden\", \"\");\n\n    const method = link.getAttribute(\"data-turbo-method\");\n    if (method) form.setAttribute(\"method\", method);\n\n    const turboFrame = link.getAttribute(\"data-turbo-frame\");\n    if (turboFrame) form.setAttribute(\"data-turbo-frame\", turboFrame);\n\n    const turboAction = getVisitAction(link);\n    if (turboAction) form.setAttribute(\"data-turbo-action\", turboAction);\n\n    const turboConfirm = link.getAttribute(\"data-turbo-confirm\");\n    if (turboConfirm) form.setAttribute(\"data-turbo-confirm\", turboConfirm);\n\n    const turboStream = link.hasAttribute(\"data-turbo-stream\");\n    if (turboStream) form.setAttribute(\"data-turbo-stream\", \"\");\n\n    this.delegate.submittedFormLinkToLocation(link, location, form);\n\n    document.body.appendChild(form);\n    form.addEventListener(\"turbo:submit-end\", () => form.remove(), { once: true });\n    requestAnimationFrame(() => form.requestSubmit());\n  }\n}\n\nclass Bardo {\n  static async preservingPermanentElements(delegate, permanentElementMap, callback) {\n    const bardo = new this(delegate, permanentElementMap);\n    bardo.enter();\n    await callback();\n    bardo.leave();\n  }\n\n  constructor(delegate, permanentElementMap) {\n    this.delegate = delegate;\n    this.permanentElementMap = permanentElementMap;\n  }\n\n  enter() {\n    for (const id in this.permanentElementMap) {\n      const [currentPermanentElement, newPermanentElement] = this.permanentElementMap[id];\n      this.delegate.enteringBardo(currentPermanentElement, newPermanentElement);\n      this.replaceNewPermanentElementWithPlaceholder(newPermanentElement);\n    }\n  }\n\n  leave() {\n    for (const id in this.permanentElementMap) {\n      const [currentPermanentElement] = this.permanentElementMap[id];\n      this.replaceCurrentPermanentElementWithClone(currentPermanentElement);\n      this.replacePlaceholderWithPermanentElement(currentPermanentElement);\n      this.delegate.leavingBardo(currentPermanentElement);\n    }\n  }\n\n  replaceNewPermanentElementWithPlaceholder(permanentElement) {\n    const placeholder = createPlaceholderForPermanentElement(permanentElement);\n    permanentElement.replaceWith(placeholder);\n  }\n\n  replaceCurrentPermanentElementWithClone(permanentElement) {\n    const clone = permanentElement.cloneNode(true);\n    permanentElement.replaceWith(clone);\n  }\n\n  replacePlaceholderWithPermanentElement(permanentElement) {\n    const placeholder = this.getPlaceholderById(permanentElement.id);\n    placeholder?.replaceWith(permanentElement);\n  }\n\n  getPlaceholderById(id) {\n    return this.placeholders.find((element) => element.content == id)\n  }\n\n  get placeholders() {\n    return [...document.querySelectorAll(\"meta[name=turbo-permanent-placeholder][content]\")]\n  }\n}\n\nfunction createPlaceholderForPermanentElement(permanentElement) {\n  const element = document.createElement(\"meta\");\n  element.setAttribute(\"name\", \"turbo-permanent-placeholder\");\n  element.setAttribute(\"content\", permanentElement.id);\n  return element\n}\n\nclass Renderer {\n  #activeElement = null\n\n  constructor(currentSnapshot, newSnapshot, renderElement, isPreview, willRender = true) {\n    this.currentSnapshot = currentSnapshot;\n    this.newSnapshot = newSnapshot;\n    this.isPreview = isPreview;\n    this.willRender = willRender;\n    this.renderElement = renderElement;\n    this.promise = new Promise((resolve, reject) => (this.resolvingFunctions = { resolve, reject }));\n  }\n\n  get shouldRender() {\n    return true\n  }\n\n  get reloadReason() {\n    return\n  }\n\n  prepareToRender() {\n    return\n  }\n\n  render() {\n    // Abstract method\n  }\n\n  finishRendering() {\n    if (this.resolvingFunctions) {\n      this.resolvingFunctions.resolve();\n      delete this.resolvingFunctions;\n    }\n  }\n\n  async preservingPermanentElements(callback) {\n    await Bardo.preservingPermanentElements(this, this.permanentElementMap, callback);\n  }\n\n  focusFirstAutofocusableElement() {\n    const element = this.connectedSnapshot.firstAutofocusableElement;\n    if (element) {\n      element.focus();\n    }\n  }\n\n  // Bardo delegate\n\n  enteringBardo(currentPermanentElement) {\n    if (this.#activeElement) return\n\n    if (currentPermanentElement.contains(this.currentSnapshot.activeElement)) {\n      this.#activeElement = this.currentSnapshot.activeElement;\n    }\n  }\n\n  leavingBardo(currentPermanentElement) {\n    if (currentPermanentElement.contains(this.#activeElement) && this.#activeElement instanceof HTMLElement) {\n      this.#activeElement.focus();\n\n      this.#activeElement = null;\n    }\n  }\n\n  get connectedSnapshot() {\n    return this.newSnapshot.isConnected ? this.newSnapshot : this.currentSnapshot\n  }\n\n  get currentElement() {\n    return this.currentSnapshot.element\n  }\n\n  get newElement() {\n    return this.newSnapshot.element\n  }\n\n  get permanentElementMap() {\n    return this.currentSnapshot.getPermanentElementMapForSnapshot(this.newSnapshot)\n  }\n\n  get renderMethod() {\n    return \"replace\"\n  }\n}\n\nclass FrameRenderer extends Renderer {\n  static renderElement(currentElement, newElement) {\n    const destinationRange = document.createRange();\n    destinationRange.selectNodeContents(currentElement);\n    destinationRange.deleteContents();\n\n    const frameElement = newElement;\n    const sourceRange = frameElement.ownerDocument?.createRange();\n    if (sourceRange) {\n      sourceRange.selectNodeContents(frameElement);\n      currentElement.appendChild(sourceRange.extractContents());\n    }\n  }\n\n  constructor(delegate, currentSnapshot, newSnapshot, renderElement, isPreview, willRender = true) {\n    super(currentSnapshot, newSnapshot, renderElement, isPreview, willRender);\n    this.delegate = delegate;\n  }\n\n  get shouldRender() {\n    return true\n  }\n\n  async render() {\n    await nextRepaint();\n    this.preservingPermanentElements(() => {\n      this.loadFrameElement();\n    });\n    this.scrollFrameIntoView();\n    await nextRepaint();\n    this.focusFirstAutofocusableElement();\n    await nextRepaint();\n    this.activateScriptElements();\n  }\n\n  loadFrameElement() {\n    this.delegate.willRenderFrame(this.currentElement, this.newElement);\n    this.renderElement(this.currentElement, this.newElement);\n  }\n\n  scrollFrameIntoView() {\n    if (this.currentElement.autoscroll || this.newElement.autoscroll) {\n      const element = this.currentElement.firstElementChild;\n      const block = readScrollLogicalPosition(this.currentElement.getAttribute(\"data-autoscroll-block\"), \"end\");\n      const behavior = readScrollBehavior(this.currentElement.getAttribute(\"data-autoscroll-behavior\"), \"auto\");\n\n      if (element) {\n        element.scrollIntoView({ block, behavior });\n        return true\n      }\n    }\n    return false\n  }\n\n  activateScriptElements() {\n    for (const inertScriptElement of this.newScriptElements) {\n      const activatedScriptElement = activateScriptElement(inertScriptElement);\n      inertScriptElement.replaceWith(activatedScriptElement);\n    }\n  }\n\n  get newScriptElements() {\n    return this.currentElement.querySelectorAll(\"script\")\n  }\n}\n\nfunction readScrollLogicalPosition(value, defaultValue) {\n  if (value == \"end\" || value == \"start\" || value == \"center\" || value == \"nearest\") {\n    return value\n  } else {\n    return defaultValue\n  }\n}\n\nfunction readScrollBehavior(value, defaultValue) {\n  if (value == \"auto\" || value == \"smooth\") {\n    return value\n  } else {\n    return defaultValue\n  }\n}\n\nclass ProgressBar {\n  static animationDuration = 300 /*ms*/\n\n  static get defaultCSS() {\n    return unindent`\n      .turbo-progress-bar {\n        position: fixed;\n        display: block;\n        top: 0;\n        left: 0;\n        height: 3px;\n        background: #0076ff;\n        z-index: 2147483647;\n        transition:\n          width ${ProgressBar.animationDuration}ms ease-out,\n          opacity ${ProgressBar.animationDuration / 2}ms ${ProgressBar.animationDuration / 2}ms ease-in;\n        transform: translate3d(0, 0, 0);\n      }\n    `\n  }\n\n  hiding = false\n  value = 0\n  visible = false\n\n  constructor() {\n    this.stylesheetElement = this.createStylesheetElement();\n    this.progressElement = this.createProgressElement();\n    this.installStylesheetElement();\n    this.setValue(0);\n  }\n\n  show() {\n    if (!this.visible) {\n      this.visible = true;\n      this.installProgressElement();\n      this.startTrickling();\n    }\n  }\n\n  hide() {\n    if (this.visible && !this.hiding) {\n      this.hiding = true;\n      this.fadeProgressElement(() => {\n        this.uninstallProgressElement();\n        this.stopTrickling();\n        this.visible = false;\n        this.hiding = false;\n      });\n    }\n  }\n\n  setValue(value) {\n    this.value = value;\n    this.refresh();\n  }\n\n  // Private\n\n  installStylesheetElement() {\n    document.head.insertBefore(this.stylesheetElement, document.head.firstChild);\n  }\n\n  installProgressElement() {\n    this.progressElement.style.width = \"0\";\n    this.progressElement.style.opacity = \"1\";\n    document.documentElement.insertBefore(this.progressElement, document.body);\n    this.refresh();\n  }\n\n  fadeProgressElement(callback) {\n    this.progressElement.style.opacity = \"0\";\n    setTimeout(callback, ProgressBar.animationDuration * 1.5);\n  }\n\n  uninstallProgressElement() {\n    if (this.progressElement.parentNode) {\n      document.documentElement.removeChild(this.progressElement);\n    }\n  }\n\n  startTrickling() {\n    if (!this.trickleInterval) {\n      this.trickleInterval = window.setInterval(this.trickle, ProgressBar.animationDuration);\n    }\n  }\n\n  stopTrickling() {\n    window.clearInterval(this.trickleInterval);\n    delete this.trickleInterval;\n  }\n\n  trickle = () => {\n    this.setValue(this.value + Math.random() / 100);\n  }\n\n  refresh() {\n    requestAnimationFrame(() => {\n      this.progressElement.style.width = `${10 + this.value * 90}%`;\n    });\n  }\n\n  createStylesheetElement() {\n    const element = document.createElement(\"style\");\n    element.type = \"text/css\";\n    element.textContent = ProgressBar.defaultCSS;\n    if (this.cspNonce) {\n      element.nonce = this.cspNonce;\n    }\n    return element\n  }\n\n  createProgressElement() {\n    const element = document.createElement(\"div\");\n    element.className = \"turbo-progress-bar\";\n    return element\n  }\n\n  get cspNonce() {\n    return getMetaContent(\"csp-nonce\")\n  }\n}\n\nclass HeadSnapshot extends Snapshot {\n  detailsByOuterHTML = this.children\n    .filter((element) => !elementIsNoscript(element))\n    .map((element) => elementWithoutNonce(element))\n    .reduce((result, element) => {\n      const { outerHTML } = element;\n      const details =\n        outerHTML in result\n          ? result[outerHTML]\n          : {\n              type: elementType(element),\n              tracked: elementIsTracked(element),\n              elements: []\n            };\n      return {\n        ...result,\n        [outerHTML]: {\n          ...details,\n          elements: [...details.elements, element]\n        }\n      }\n    }, {})\n\n  get trackedElementSignature() {\n    return Object.keys(this.detailsByOuterHTML)\n      .filter((outerHTML) => this.detailsByOuterHTML[outerHTML].tracked)\n      .join(\"\")\n  }\n\n  getScriptElementsNotInSnapshot(snapshot) {\n    return this.getElementsMatchingTypeNotInSnapshot(\"script\", snapshot)\n  }\n\n  getStylesheetElementsNotInSnapshot(snapshot) {\n    return this.getElementsMatchingTypeNotInSnapshot(\"stylesheet\", snapshot)\n  }\n\n  getElementsMatchingTypeNotInSnapshot(matchedType, snapshot) {\n    return Object.keys(this.detailsByOuterHTML)\n      .filter((outerHTML) => !(outerHTML in snapshot.detailsByOuterHTML))\n      .map((outerHTML) => this.detailsByOuterHTML[outerHTML])\n      .filter(({ type }) => type == matchedType)\n      .map(({ elements: [element] }) => element)\n  }\n\n  get provisionalElements() {\n    return Object.keys(this.detailsByOuterHTML).reduce((result, outerHTML) => {\n      const { type, tracked, elements } = this.detailsByOuterHTML[outerHTML];\n      if (type == null && !tracked) {\n        return [...result, ...elements]\n      } else if (elements.length > 1) {\n        return [...result, ...elements.slice(1)]\n      } else {\n        return result\n      }\n    }, [])\n  }\n\n  getMetaValue(name) {\n    const element = this.findMetaElementByName(name);\n    return element ? element.getAttribute(\"content\") : null\n  }\n\n  findMetaElementByName(name) {\n    return Object.keys(this.detailsByOuterHTML).reduce((result, outerHTML) => {\n      const {\n        elements: [element]\n      } = this.detailsByOuterHTML[outerHTML];\n      return elementIsMetaElementWithName(element, name) ? element : result\n    }, undefined | undefined)\n  }\n}\n\nfunction elementType(element) {\n  if (elementIsScript(element)) {\n    return \"script\"\n  } else if (elementIsStylesheet(element)) {\n    return \"stylesheet\"\n  }\n}\n\nfunction elementIsTracked(element) {\n  return element.getAttribute(\"data-turbo-track\") == \"reload\"\n}\n\nfunction elementIsScript(element) {\n  const tagName = element.localName;\n  return tagName == \"script\"\n}\n\nfunction elementIsNoscript(element) {\n  const tagName = element.localName;\n  return tagName == \"noscript\"\n}\n\nfunction elementIsStylesheet(element) {\n  const tagName = element.localName;\n  return tagName == \"style\" || (tagName == \"link\" && element.getAttribute(\"rel\") == \"stylesheet\")\n}\n\nfunction elementIsMetaElementWithName(element, name) {\n  const tagName = element.localName;\n  return tagName == \"meta\" && element.getAttribute(\"name\") == name\n}\n\nfunction elementWithoutNonce(element) {\n  if (element.hasAttribute(\"nonce\")) {\n    element.setAttribute(\"nonce\", \"\");\n  }\n\n  return element\n}\n\nclass PageSnapshot extends Snapshot {\n  static fromHTMLString(html = \"\") {\n    return this.fromDocument(parseHTMLDocument(html))\n  }\n\n  static fromElement(element) {\n    return this.fromDocument(element.ownerDocument)\n  }\n\n  static fromDocument({ documentElement, body, head }) {\n    return new this(documentElement, body, new HeadSnapshot(head))\n  }\n\n  constructor(documentElement, body, headSnapshot) {\n    super(body);\n    this.documentElement = documentElement;\n    this.headSnapshot = headSnapshot;\n  }\n\n  clone() {\n    const clonedElement = this.element.cloneNode(true);\n\n    const selectElements = this.element.querySelectorAll(\"select\");\n    const clonedSelectElements = clonedElement.querySelectorAll(\"select\");\n\n    for (const [index, source] of selectElements.entries()) {\n      const clone = clonedSelectElements[index];\n      for (const option of clone.selectedOptions) option.selected = false;\n      for (const option of source.selectedOptions) clone.options[option.index].selected = true;\n    }\n\n    for (const clonedPasswordInput of clonedElement.querySelectorAll('input[type=\"password\"]')) {\n      clonedPasswordInput.value = \"\";\n    }\n\n    return new PageSnapshot(this.documentElement, clonedElement, this.headSnapshot)\n  }\n\n  get lang() {\n    return this.documentElement.getAttribute(\"lang\")\n  }\n\n  get headElement() {\n    return this.headSnapshot.element\n  }\n\n  get rootLocation() {\n    const root = this.getSetting(\"root\") ?? \"/\";\n    return expandURL(root)\n  }\n\n  get cacheControlValue() {\n    return this.getSetting(\"cache-control\")\n  }\n\n  get isPreviewable() {\n    return this.cacheControlValue != \"no-preview\"\n  }\n\n  get isCacheable() {\n    return this.cacheControlValue != \"no-cache\"\n  }\n\n  get isVisitable() {\n    return this.getSetting(\"visit-control\") != \"reload\"\n  }\n\n  get prefersViewTransitions() {\n    return this.headSnapshot.getMetaValue(\"view-transition\") === \"same-origin\"\n  }\n\n  get shouldMorphPage() {\n    return this.getSetting(\"refresh-method\") === \"morph\"\n  }\n\n  get shouldPreserveScrollPosition() {\n    return this.getSetting(\"refresh-scroll\") === \"preserve\"\n  }\n\n  // Private\n\n  getSetting(name) {\n    return this.headSnapshot.getMetaValue(`turbo-${name}`)\n  }\n}\n\nclass ViewTransitioner {\n  #viewTransitionStarted = false\n  #lastOperation = Promise.resolve()\n\n  renderChange(useViewTransition, render) {\n    if (useViewTransition && this.viewTransitionsAvailable && !this.#viewTransitionStarted) {\n      this.#viewTransitionStarted = true;\n      this.#lastOperation = this.#lastOperation.then(async () => {\n        await document.startViewTransition(render).finished;\n      });\n    } else {\n      this.#lastOperation = this.#lastOperation.then(render);\n    }\n\n    return this.#lastOperation\n  }\n\n  get viewTransitionsAvailable() {\n    return document.startViewTransition\n  }\n}\n\nconst defaultOptions = {\n  action: \"advance\",\n  historyChanged: false,\n  visitCachedSnapshot: () => {},\n  willRender: true,\n  updateHistory: true,\n  shouldCacheSnapshot: true,\n  acceptsStreamResponse: false\n};\n\nconst TimingMetric = {\n  visitStart: \"visitStart\",\n  requestStart: \"requestStart\",\n  requestEnd: \"requestEnd\",\n  visitEnd: \"visitEnd\"\n};\n\nconst VisitState = {\n  initialized: \"initialized\",\n  started: \"started\",\n  canceled: \"canceled\",\n  failed: \"failed\",\n  completed: \"completed\"\n};\n\nconst SystemStatusCode = {\n  networkFailure: 0,\n  timeoutFailure: -1,\n  contentTypeMismatch: -2\n};\n\nconst Direction = {\n  advance: \"forward\",\n  restore: \"back\",\n  replace: \"none\"\n};\n\nclass Visit {\n  identifier = uuid() // Required by turbo-ios\n  timingMetrics = {}\n\n  followedRedirect = false\n  historyChanged = false\n  scrolled = false\n  shouldCacheSnapshot = true\n  acceptsStreamResponse = false\n  snapshotCached = false\n  state = VisitState.initialized\n  viewTransitioner = new ViewTransitioner()\n\n  constructor(delegate, location, restorationIdentifier, options = {}) {\n    this.delegate = delegate;\n    this.location = location;\n    this.restorationIdentifier = restorationIdentifier || uuid();\n\n    const {\n      action,\n      historyChanged,\n      referrer,\n      snapshot,\n      snapshotHTML,\n      response,\n      visitCachedSnapshot,\n      willRender,\n      updateHistory,\n      shouldCacheSnapshot,\n      acceptsStreamResponse,\n      direction\n    } = {\n      ...defaultOptions,\n      ...options\n    };\n    this.action = action;\n    this.historyChanged = historyChanged;\n    this.referrer = referrer;\n    this.snapshot = snapshot;\n    this.snapshotHTML = snapshotHTML;\n    this.response = response;\n    this.isSamePage = this.delegate.locationWithActionIsSamePage(this.location, this.action);\n    this.isPageRefresh = this.view.isPageRefresh(this);\n    this.visitCachedSnapshot = visitCachedSnapshot;\n    this.willRender = willRender;\n    this.updateHistory = updateHistory;\n    this.scrolled = !willRender;\n    this.shouldCacheSnapshot = shouldCacheSnapshot;\n    this.acceptsStreamResponse = acceptsStreamResponse;\n    this.direction = direction || Direction[action];\n  }\n\n  get adapter() {\n    return this.delegate.adapter\n  }\n\n  get view() {\n    return this.delegate.view\n  }\n\n  get history() {\n    return this.delegate.history\n  }\n\n  get restorationData() {\n    return this.history.getRestorationDataForIdentifier(this.restorationIdentifier)\n  }\n\n  get silent() {\n    return this.isSamePage\n  }\n\n  start() {\n    if (this.state == VisitState.initialized) {\n      this.recordTimingMetric(TimingMetric.visitStart);\n      this.state = VisitState.started;\n      this.adapter.visitStarted(this);\n      this.delegate.visitStarted(this);\n    }\n  }\n\n  cancel() {\n    if (this.state == VisitState.started) {\n      if (this.request) {\n        this.request.cancel();\n      }\n      this.cancelRender();\n      this.state = VisitState.canceled;\n    }\n  }\n\n  complete() {\n    if (this.state == VisitState.started) {\n      this.recordTimingMetric(TimingMetric.visitEnd);\n      this.state = VisitState.completed;\n      this.followRedirect();\n\n      if (!this.followedRedirect) {\n        this.adapter.visitCompleted(this);\n        this.delegate.visitCompleted(this);\n      }\n    }\n  }\n\n  fail() {\n    if (this.state == VisitState.started) {\n      this.state = VisitState.failed;\n      this.adapter.visitFailed(this);\n      this.delegate.visitCompleted(this);\n    }\n  }\n\n  changeHistory() {\n    if (!this.historyChanged && this.updateHistory) {\n      const actionForHistory = this.location.href === this.referrer?.href ? \"replace\" : this.action;\n      const method = getHistoryMethodForAction(actionForHistory);\n      this.history.update(method, this.location, this.restorationIdentifier);\n      this.historyChanged = true;\n    }\n  }\n\n  issueRequest() {\n    if (this.hasPreloadedResponse()) {\n      this.simulateRequest();\n    } else if (this.shouldIssueRequest() && !this.request) {\n      this.request = new FetchRequest(this, FetchMethod.get, this.location);\n      this.request.perform();\n    }\n  }\n\n  simulateRequest() {\n    if (this.response) {\n      this.startRequest();\n      this.recordResponse();\n      this.finishRequest();\n    }\n  }\n\n  startRequest() {\n    this.recordTimingMetric(TimingMetric.requestStart);\n    this.adapter.visitRequestStarted(this);\n  }\n\n  recordResponse(response = this.response) {\n    this.response = response;\n    if (response) {\n      const { statusCode } = response;\n      if (isSuccessful(statusCode)) {\n        this.adapter.visitRequestCompleted(this);\n      } else {\n        this.adapter.visitRequestFailedWithStatusCode(this, statusCode);\n      }\n    }\n  }\n\n  finishRequest() {\n    this.recordTimingMetric(TimingMetric.requestEnd);\n    this.adapter.visitRequestFinished(this);\n  }\n\n  loadResponse() {\n    if (this.response) {\n      const { statusCode, responseHTML } = this.response;\n      this.render(async () => {\n        if (this.shouldCacheSnapshot) this.cacheSnapshot();\n        if (this.view.renderPromise) await this.view.renderPromise;\n\n        if (isSuccessful(statusCode) && responseHTML != null) {\n          const snapshot = PageSnapshot.fromHTMLString(responseHTML);\n          await this.renderPageSnapshot(snapshot, false);\n\n          this.adapter.visitRendered(this);\n          this.complete();\n        } else {\n          await this.view.renderError(PageSnapshot.fromHTMLString(responseHTML), this);\n          this.adapter.visitRendered(this);\n          this.fail();\n        }\n      });\n    }\n  }\n\n  getCachedSnapshot() {\n    const snapshot = this.view.getCachedSnapshotForLocation(this.location) || this.getPreloadedSnapshot();\n\n    if (snapshot && (!getAnchor(this.location) || snapshot.hasAnchor(getAnchor(this.location)))) {\n      if (this.action == \"restore\" || snapshot.isPreviewable) {\n        return snapshot\n      }\n    }\n  }\n\n  getPreloadedSnapshot() {\n    if (this.snapshotHTML) {\n      return PageSnapshot.fromHTMLString(this.snapshotHTML)\n    }\n  }\n\n  hasCachedSnapshot() {\n    return this.getCachedSnapshot() != null\n  }\n\n  loadCachedSnapshot() {\n    const snapshot = this.getCachedSnapshot();\n    if (snapshot) {\n      const isPreview = this.shouldIssueRequest();\n      this.render(async () => {\n        this.cacheSnapshot();\n        if (this.isSamePage || this.isPageRefresh) {\n          this.adapter.visitRendered(this);\n        } else {\n          if (this.view.renderPromise) await this.view.renderPromise;\n\n          await this.renderPageSnapshot(snapshot, isPreview);\n\n          this.adapter.visitRendered(this);\n          if (!isPreview) {\n            this.complete();\n          }\n        }\n      });\n    }\n  }\n\n  followRedirect() {\n    if (this.redirectedToLocation && !this.followedRedirect && this.response?.redirected) {\n      this.adapter.visitProposedToLocation(this.redirectedToLocation, {\n        action: \"replace\",\n        response: this.response,\n        shouldCacheSnapshot: false,\n        willRender: false\n      });\n      this.followedRedirect = true;\n    }\n  }\n\n  goToSamePageAnchor() {\n    if (this.isSamePage) {\n      this.render(async () => {\n        this.cacheSnapshot();\n        this.performScroll();\n        this.changeHistory();\n        this.adapter.visitRendered(this);\n      });\n    }\n  }\n\n  // Fetch request delegate\n\n  prepareRequest(request) {\n    if (this.acceptsStreamResponse) {\n      request.acceptResponseType(StreamMessage.contentType);\n    }\n  }\n\n  requestStarted() {\n    this.startRequest();\n  }\n\n  requestPreventedHandlingResponse(_request, _response) {}\n\n  async requestSucceededWithResponse(request, response) {\n    const responseHTML = await response.responseHTML;\n    const { redirected, statusCode } = response;\n    if (responseHTML == undefined) {\n      this.recordResponse({\n        statusCode: SystemStatusCode.contentTypeMismatch,\n        redirected\n      });\n    } else {\n      this.redirectedToLocation = response.redirected ? response.location : undefined;\n      this.recordResponse({ statusCode: statusCode, responseHTML, redirected });\n    }\n  }\n\n  async requestFailedWithResponse(request, response) {\n    const responseHTML = await response.responseHTML;\n    const { redirected, statusCode } = response;\n    if (responseHTML == undefined) {\n      this.recordResponse({\n        statusCode: SystemStatusCode.contentTypeMismatch,\n        redirected\n      });\n    } else {\n      this.recordResponse({ statusCode: statusCode, responseHTML, redirected });\n    }\n  }\n\n  requestErrored(_request, _error) {\n    this.recordResponse({\n      statusCode: SystemStatusCode.networkFailure,\n      redirected: false\n    });\n  }\n\n  requestFinished() {\n    this.finishRequest();\n  }\n\n  // Scrolling\n\n  performScroll() {\n    if (!this.scrolled && !this.view.forceReloaded && !this.view.shouldPreserveScrollPosition(this)) {\n      if (this.action == \"restore\") {\n        this.scrollToRestoredPosition() || this.scrollToAnchor() || this.view.scrollToTop();\n      } else {\n        this.scrollToAnchor() || this.view.scrollToTop();\n      }\n      if (this.isSamePage) {\n        this.delegate.visitScrolledToSamePageLocation(this.view.lastRenderedLocation, this.location);\n      }\n\n      this.scrolled = true;\n    }\n  }\n\n  scrollToRestoredPosition() {\n    const { scrollPosition } = this.restorationData;\n    if (scrollPosition) {\n      this.view.scrollToPosition(scrollPosition);\n      return true\n    }\n  }\n\n  scrollToAnchor() {\n    const anchor = getAnchor(this.location);\n    if (anchor != null) {\n      this.view.scrollToAnchor(anchor);\n      return true\n    }\n  }\n\n  // Instrumentation\n\n  recordTimingMetric(metric) {\n    this.timingMetrics[metric] = new Date().getTime();\n  }\n\n  getTimingMetrics() {\n    return { ...this.timingMetrics }\n  }\n\n  // Private\n\n  getHistoryMethodForAction(action) {\n    switch (action) {\n      case \"replace\":\n        return history.replaceState\n      case \"advance\":\n      case \"restore\":\n        return history.pushState\n    }\n  }\n\n  hasPreloadedResponse() {\n    return typeof this.response == \"object\"\n  }\n\n  shouldIssueRequest() {\n    if (this.isSamePage) {\n      return false\n    } else if (this.action == \"restore\") {\n      return !this.hasCachedSnapshot()\n    } else {\n      return this.willRender\n    }\n  }\n\n  cacheSnapshot() {\n    if (!this.snapshotCached) {\n      this.view.cacheSnapshot(this.snapshot).then((snapshot) => snapshot && this.visitCachedSnapshot(snapshot));\n      this.snapshotCached = true;\n    }\n  }\n\n  async render(callback) {\n    this.cancelRender();\n    this.frame = await nextRepaint();\n    await callback();\n    delete this.frame;\n  }\n\n  async renderPageSnapshot(snapshot, isPreview) {\n    await this.viewTransitioner.renderChange(this.view.shouldTransitionTo(snapshot), async () => {\n      await this.view.renderPage(snapshot, isPreview, this.willRender, this);\n      this.performScroll();\n    });\n  }\n\n  cancelRender() {\n    if (this.frame) {\n      cancelAnimationFrame(this.frame);\n      delete this.frame;\n    }\n  }\n}\n\nfunction isSuccessful(statusCode) {\n  return statusCode >= 200 && statusCode < 300\n}\n\nclass BrowserAdapter {\n  progressBar = new ProgressBar()\n\n  constructor(session) {\n    this.session = session;\n  }\n\n  visitProposedToLocation(location, options) {\n    if (locationIsVisitable(location, this.navigator.rootLocation)) {\n      this.navigator.startVisit(location, options?.restorationIdentifier || uuid(), options);\n    } else {\n      window.location.href = location.toString();\n    }\n  }\n\n  visitStarted(visit) {\n    this.location = visit.location;\n    visit.loadCachedSnapshot();\n    visit.issueRequest();\n    visit.goToSamePageAnchor();\n  }\n\n  visitRequestStarted(visit) {\n    this.progressBar.setValue(0);\n    if (visit.hasCachedSnapshot() || visit.action != \"restore\") {\n      this.showVisitProgressBarAfterDelay();\n    } else {\n      this.showProgressBar();\n    }\n  }\n\n  visitRequestCompleted(visit) {\n    visit.loadResponse();\n  }\n\n  visitRequestFailedWithStatusCode(visit, statusCode) {\n    switch (statusCode) {\n      case SystemStatusCode.networkFailure:\n      case SystemStatusCode.timeoutFailure:\n      case SystemStatusCode.contentTypeMismatch:\n        return this.reload({\n          reason: \"request_failed\",\n          context: {\n            statusCode\n          }\n        })\n      default:\n        return visit.loadResponse()\n    }\n  }\n\n  visitRequestFinished(_visit) {}\n\n  visitCompleted(_visit) {\n    this.progressBar.setValue(1);\n    this.hideVisitProgressBar();\n  }\n\n  pageInvalidated(reason) {\n    this.reload(reason);\n  }\n\n  visitFailed(_visit) {\n    this.progressBar.setValue(1);\n    this.hideVisitProgressBar();\n  }\n\n  visitRendered(_visit) {}\n\n  // Form Submission Delegate\n\n  formSubmissionStarted(_formSubmission) {\n    this.progressBar.setValue(0);\n    this.showFormProgressBarAfterDelay();\n  }\n\n  formSubmissionFinished(_formSubmission) {\n    this.progressBar.setValue(1);\n    this.hideFormProgressBar();\n  }\n\n  // Private\n\n  showVisitProgressBarAfterDelay() {\n    this.visitProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);\n  }\n\n  hideVisitProgressBar() {\n    this.progressBar.hide();\n    if (this.visitProgressBarTimeout != null) {\n      window.clearTimeout(this.visitProgressBarTimeout);\n      delete this.visitProgressBarTimeout;\n    }\n  }\n\n  showFormProgressBarAfterDelay() {\n    if (this.formProgressBarTimeout == null) {\n      this.formProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);\n    }\n  }\n\n  hideFormProgressBar() {\n    this.progressBar.hide();\n    if (this.formProgressBarTimeout != null) {\n      window.clearTimeout(this.formProgressBarTimeout);\n      delete this.formProgressBarTimeout;\n    }\n  }\n\n  showProgressBar = () => {\n    this.progressBar.show();\n  }\n\n  reload(reason) {\n    dispatch(\"turbo:reload\", { detail: reason });\n\n    window.location.href = this.location?.toString() || window.location.href;\n  }\n\n  get navigator() {\n    return this.session.navigator\n  }\n}\n\nclass CacheObserver {\n  selector = \"[data-turbo-temporary]\"\n  deprecatedSelector = \"[data-turbo-cache=false]\"\n\n  started = false\n\n  start() {\n    if (!this.started) {\n      this.started = true;\n      addEventListener(\"turbo:before-cache\", this.removeTemporaryElements, false);\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false;\n      removeEventListener(\"turbo:before-cache\", this.removeTemporaryElements, false);\n    }\n  }\n\n  removeTemporaryElements = (_event) => {\n    for (const element of this.temporaryElements) {\n      element.remove();\n    }\n  }\n\n  get temporaryElements() {\n    return [...document.querySelectorAll(this.selector), ...this.temporaryElementsWithDeprecation]\n  }\n\n  get temporaryElementsWithDeprecation() {\n    const elements = document.querySelectorAll(this.deprecatedSelector);\n\n    if (elements.length) {\n      console.warn(\n        `The ${this.deprecatedSelector} selector is deprecated and will be removed in a future version. Use ${this.selector} instead.`\n      );\n    }\n\n    return [...elements]\n  }\n}\n\nclass FrameRedirector {\n  constructor(session, element) {\n    this.session = session;\n    this.element = element;\n    this.linkInterceptor = new LinkInterceptor(this, element);\n    this.formSubmitObserver = new FormSubmitObserver(this, element);\n  }\n\n  start() {\n    this.linkInterceptor.start();\n    this.formSubmitObserver.start();\n  }\n\n  stop() {\n    this.linkInterceptor.stop();\n    this.formSubmitObserver.stop();\n  }\n\n  // Link interceptor delegate\n\n  shouldInterceptLinkClick(element, _location, _event) {\n    return this.#shouldRedirect(element)\n  }\n\n  linkClickIntercepted(element, url, event) {\n    const frame = this.#findFrameElement(element);\n    if (frame) {\n      frame.delegate.linkClickIntercepted(element, url, event);\n    }\n  }\n\n  // Form submit observer delegate\n\n  willSubmitForm(element, submitter) {\n    return (\n      element.closest(\"turbo-frame\") == null &&\n      this.#shouldSubmit(element, submitter) &&\n      this.#shouldRedirect(element, submitter)\n    )\n  }\n\n  formSubmitted(element, submitter) {\n    const frame = this.#findFrameElement(element, submitter);\n    if (frame) {\n      frame.delegate.formSubmitted(element, submitter);\n    }\n  }\n\n  #shouldSubmit(form, submitter) {\n    const action = getAction$1(form, submitter);\n    const meta = this.element.ownerDocument.querySelector(`meta[name=\"turbo-root\"]`);\n    const rootLocation = expandURL(meta?.content ?? \"/\");\n\n    return this.#shouldRedirect(form, submitter) && locationIsVisitable(action, rootLocation)\n  }\n\n  #shouldRedirect(element, submitter) {\n    const isNavigatable =\n      element instanceof HTMLFormElement\n        ? this.session.submissionIsNavigatable(element, submitter)\n        : this.session.elementIsNavigatable(element);\n\n    if (isNavigatable) {\n      const frame = this.#findFrameElement(element, submitter);\n      return frame ? frame != element.closest(\"turbo-frame\") : false\n    } else {\n      return false\n    }\n  }\n\n  #findFrameElement(element, submitter) {\n    const id = submitter?.getAttribute(\"data-turbo-frame\") || element.getAttribute(\"data-turbo-frame\");\n    if (id && id != \"_top\") {\n      const frame = this.element.querySelector(`#${id}:not([disabled])`);\n      if (frame instanceof FrameElement) {\n        return frame\n      }\n    }\n  }\n}\n\nclass History {\n  location\n  restorationIdentifier = uuid()\n  restorationData = {}\n  started = false\n  pageLoaded = false\n  currentIndex = 0\n\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n\n  start() {\n    if (!this.started) {\n      addEventListener(\"popstate\", this.onPopState, false);\n      addEventListener(\"load\", this.onPageLoad, false);\n      this.currentIndex = history.state?.turbo?.restorationIndex || 0;\n      this.started = true;\n      this.replace(new URL(window.location.href));\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      removeEventListener(\"popstate\", this.onPopState, false);\n      removeEventListener(\"load\", this.onPageLoad, false);\n      this.started = false;\n    }\n  }\n\n  push(location, restorationIdentifier) {\n    this.update(history.pushState, location, restorationIdentifier);\n  }\n\n  replace(location, restorationIdentifier) {\n    this.update(history.replaceState, location, restorationIdentifier);\n  }\n\n  update(method, location, restorationIdentifier = uuid()) {\n    if (method === history.pushState) ++this.currentIndex;\n\n    const state = { turbo: { restorationIdentifier, restorationIndex: this.currentIndex } };\n    method.call(history, state, \"\", location.href);\n    this.location = location;\n    this.restorationIdentifier = restorationIdentifier;\n  }\n\n  // Restoration data\n\n  getRestorationDataForIdentifier(restorationIdentifier) {\n    return this.restorationData[restorationIdentifier] || {}\n  }\n\n  updateRestorationData(additionalData) {\n    const { restorationIdentifier } = this;\n    const restorationData = this.restorationData[restorationIdentifier];\n    this.restorationData[restorationIdentifier] = {\n      ...restorationData,\n      ...additionalData\n    };\n  }\n\n  // Scroll restoration\n\n  assumeControlOfScrollRestoration() {\n    if (!this.previousScrollRestoration) {\n      this.previousScrollRestoration = history.scrollRestoration ?? \"auto\";\n      history.scrollRestoration = \"manual\";\n    }\n  }\n\n  relinquishControlOfScrollRestoration() {\n    if (this.previousScrollRestoration) {\n      history.scrollRestoration = this.previousScrollRestoration;\n      delete this.previousScrollRestoration;\n    }\n  }\n\n  // Event handlers\n\n  onPopState = (event) => {\n    if (this.shouldHandlePopState()) {\n      const { turbo } = event.state || {};\n      if (turbo) {\n        this.location = new URL(window.location.href);\n        const { restorationIdentifier, restorationIndex } = turbo;\n        this.restorationIdentifier = restorationIdentifier;\n        const direction = restorationIndex > this.currentIndex ? \"forward\" : \"back\";\n        this.delegate.historyPoppedToLocationWithRestorationIdentifierAndDirection(this.location, restorationIdentifier, direction);\n        this.currentIndex = restorationIndex;\n      }\n    }\n  }\n\n  onPageLoad = async (_event) => {\n    await nextMicrotask();\n    this.pageLoaded = true;\n  }\n\n  // Private\n\n  shouldHandlePopState() {\n    // Safari dispatches a popstate event after window's load event, ignore it\n    return this.pageIsLoaded()\n  }\n\n  pageIsLoaded() {\n    return this.pageLoaded || document.readyState == \"complete\"\n  }\n}\n\nclass LinkPrefetchObserver {\n  started = false\n  #prefetchedLink = null\n\n  constructor(delegate, eventTarget) {\n    this.delegate = delegate;\n    this.eventTarget = eventTarget;\n  }\n\n  start() {\n    if (this.started) return\n\n    if (this.eventTarget.readyState === \"loading\") {\n      this.eventTarget.addEventListener(\"DOMContentLoaded\", this.#enable, { once: true });\n    } else {\n      this.#enable();\n    }\n  }\n\n  stop() {\n    if (!this.started) return\n\n    this.eventTarget.removeEventListener(\"mouseenter\", this.#tryToPrefetchRequest, {\n      capture: true,\n      passive: true\n    });\n    this.eventTarget.removeEventListener(\"mouseleave\", this.#cancelRequestIfObsolete, {\n      capture: true,\n      passive: true\n    });\n\n    this.eventTarget.removeEventListener(\"turbo:before-fetch-request\", this.#tryToUsePrefetchedRequest, true);\n    this.started = false;\n  }\n\n  #enable = () => {\n    this.eventTarget.addEventListener(\"mouseenter\", this.#tryToPrefetchRequest, {\n      capture: true,\n      passive: true\n    });\n    this.eventTarget.addEventListener(\"mouseleave\", this.#cancelRequestIfObsolete, {\n      capture: true,\n      passive: true\n    });\n\n    this.eventTarget.addEventListener(\"turbo:before-fetch-request\", this.#tryToUsePrefetchedRequest, true);\n    this.started = true;\n  }\n\n  #tryToPrefetchRequest = (event) => {\n    if (getMetaContent(\"turbo-prefetch\") === \"false\") return\n\n    const target = event.target;\n    const isLink = target.matches && target.matches(\"a[href]:not([target^=_]):not([download])\");\n\n    if (isLink && this.#isPrefetchable(target)) {\n      const link = target;\n      const location = getLocationForLink(link);\n\n      if (this.delegate.canPrefetchRequestToLocation(link, location)) {\n        this.#prefetchedLink = link;\n\n        const fetchRequest = new FetchRequest(\n          this,\n          FetchMethod.get,\n          location,\n          new URLSearchParams(),\n          target\n        );\n\n        prefetchCache.setLater(location.toString(), fetchRequest, this.#cacheTtl);\n      }\n    }\n  }\n\n  #cancelRequestIfObsolete = (event) => {\n    if (event.target === this.#prefetchedLink) this.#cancelPrefetchRequest();\n  }\n\n  #cancelPrefetchRequest = () => {\n    prefetchCache.clear();\n    this.#prefetchedLink = null;\n  }\n\n  #tryToUsePrefetchedRequest = (event) => {\n    if (event.target.tagName !== \"FORM\" && event.detail.fetchOptions.method === \"get\") {\n      const cached = prefetchCache.get(event.detail.url.toString());\n\n      if (cached) {\n        // User clicked link, use cache response\n        event.detail.fetchRequest = cached;\n      }\n\n      prefetchCache.clear();\n    }\n  }\n\n  prepareRequest(request) {\n    const link = request.target;\n\n    request.headers[\"X-Sec-Purpose\"] = \"prefetch\";\n\n    const turboFrame = link.closest(\"turbo-frame\");\n    const turboFrameTarget = link.getAttribute(\"data-turbo-frame\") || turboFrame?.getAttribute(\"target\") || turboFrame?.id;\n\n    if (turboFrameTarget && turboFrameTarget !== \"_top\") {\n      request.headers[\"Turbo-Frame\"] = turboFrameTarget;\n    }\n\n    if (link.hasAttribute(\"data-turbo-stream\")) {\n      request.acceptResponseType(StreamMessage.contentType);\n    }\n  }\n\n  // Fetch request interface\n\n  requestSucceededWithResponse() {}\n\n  requestStarted(fetchRequest) {}\n\n  requestErrored(fetchRequest) {}\n\n  requestFinished(fetchRequest) {}\n\n  requestPreventedHandlingResponse(fetchRequest, fetchResponse) {}\n\n  requestFailedWithResponse(fetchRequest, fetchResponse) {}\n\n  get #cacheTtl() {\n    return Number(getMetaContent(\"turbo-prefetch-cache-time\")) || cacheTtl\n  }\n\n  #isPrefetchable(link) {\n    const href = link.getAttribute(\"href\");\n\n    if (!href || href.startsWith(\"#\") || link.getAttribute(\"data-turbo\") === \"false\" || link.getAttribute(\"data-turbo-prefetch\") === \"false\") {\n      return false\n    }\n\n    const event = dispatch(\"turbo:before-prefetch\", {\n      target: link,\n      cancelable: true\n    });\n\n    if (event.defaultPrevented) {\n      return false\n    }\n\n    if (link.origin !== document.location.origin) {\n      return false\n    }\n\n    if (![\"http:\", \"https:\"].includes(link.protocol)) {\n      return false\n    }\n\n    if (link.pathname + link.search === document.location.pathname + document.location.search) {\n      return false\n    }\n\n    const turboMethod = link.getAttribute(\"data-turbo-method\");\n    if (turboMethod && turboMethod !== \"get\") {\n      return false\n    }\n\n    if (targetsIframe(link)) {\n      return false\n    }\n\n    const turboPrefetchParent = findClosestRecursively(link, \"[data-turbo-prefetch]\");\n\n    if (turboPrefetchParent && turboPrefetchParent.getAttribute(\"data-turbo-prefetch\") === \"false\") {\n      return false\n    }\n\n    return true\n  }\n}\n\nconst targetsIframe = (link) => {\n  return !doesNotTargetIFrame(link)\n};\n\nclass Navigator {\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n\n  proposeVisit(location, options = {}) {\n    if (this.delegate.allowsVisitingLocationWithAction(location, options.action)) {\n      this.delegate.visitProposedToLocation(location, options);\n    }\n  }\n\n  startVisit(locatable, restorationIdentifier, options = {}) {\n    this.stop();\n    this.currentVisit = new Visit(this, expandURL(locatable), restorationIdentifier, {\n      referrer: this.location,\n      ...options\n    });\n    this.currentVisit.start();\n  }\n\n  submitForm(form, submitter) {\n    this.stop();\n    this.formSubmission = new FormSubmission(this, form, submitter, true);\n\n    this.formSubmission.start();\n  }\n\n  stop() {\n    if (this.formSubmission) {\n      this.formSubmission.stop();\n      delete this.formSubmission;\n    }\n\n    if (this.currentVisit) {\n      this.currentVisit.cancel();\n      delete this.currentVisit;\n    }\n  }\n\n  get adapter() {\n    return this.delegate.adapter\n  }\n\n  get view() {\n    return this.delegate.view\n  }\n\n  get rootLocation() {\n    return this.view.snapshot.rootLocation\n  }\n\n  get history() {\n    return this.delegate.history\n  }\n\n  // Form submission delegate\n\n  formSubmissionStarted(formSubmission) {\n    // Not all adapters implement formSubmissionStarted\n    if (typeof this.adapter.formSubmissionStarted === \"function\") {\n      this.adapter.formSubmissionStarted(formSubmission);\n    }\n  }\n\n  async formSubmissionSucceededWithResponse(formSubmission, fetchResponse) {\n    if (formSubmission == this.formSubmission) {\n      const responseHTML = await fetchResponse.responseHTML;\n      if (responseHTML) {\n        const shouldCacheSnapshot = formSubmission.isSafe;\n        if (!shouldCacheSnapshot) {\n          this.view.clearSnapshotCache();\n        }\n\n        const { statusCode, redirected } = fetchResponse;\n        const action = this.#getActionForFormSubmission(formSubmission, fetchResponse);\n        const visitOptions = {\n          action,\n          shouldCacheSnapshot,\n          response: { statusCode, responseHTML, redirected }\n        };\n        this.proposeVisit(fetchResponse.location, visitOptions);\n      }\n    }\n  }\n\n  async formSubmissionFailedWithResponse(formSubmission, fetchResponse) {\n    const responseHTML = await fetchResponse.responseHTML;\n\n    if (responseHTML) {\n      const snapshot = PageSnapshot.fromHTMLString(responseHTML);\n      if (fetchResponse.serverError) {\n        await this.view.renderError(snapshot, this.currentVisit);\n      } else {\n        await this.view.renderPage(snapshot, false, true, this.currentVisit);\n      }\n      if(!snapshot.shouldPreserveScrollPosition) {\n        this.view.scrollToTop();\n      }\n      this.view.clearSnapshotCache();\n    }\n  }\n\n  formSubmissionErrored(formSubmission, error) {\n    console.error(error);\n  }\n\n  formSubmissionFinished(formSubmission) {\n    // Not all adapters implement formSubmissionFinished\n    if (typeof this.adapter.formSubmissionFinished === \"function\") {\n      this.adapter.formSubmissionFinished(formSubmission);\n    }\n  }\n\n  // Visit delegate\n\n  visitStarted(visit) {\n    this.delegate.visitStarted(visit);\n  }\n\n  visitCompleted(visit) {\n    this.delegate.visitCompleted(visit);\n  }\n\n  locationWithActionIsSamePage(location, action) {\n    const anchor = getAnchor(location);\n    const currentAnchor = getAnchor(this.view.lastRenderedLocation);\n    const isRestorationToTop = action === \"restore\" && typeof anchor === \"undefined\";\n\n    return (\n      action !== \"replace\" &&\n      getRequestURL(location) === getRequestURL(this.view.lastRenderedLocation) &&\n      (isRestorationToTop || (anchor != null && anchor !== currentAnchor))\n    )\n  }\n\n  visitScrolledToSamePageLocation(oldURL, newURL) {\n    this.delegate.visitScrolledToSamePageLocation(oldURL, newURL);\n  }\n\n  // Visits\n\n  get location() {\n    return this.history.location\n  }\n\n  get restorationIdentifier() {\n    return this.history.restorationIdentifier\n  }\n\n  #getActionForFormSubmission(formSubmission, fetchResponse) {\n    const { submitter, formElement } = formSubmission;\n    return getVisitAction(submitter, formElement) || this.#getDefaultAction(fetchResponse)\n  }\n\n  #getDefaultAction(fetchResponse) {\n    const sameLocationRedirect = fetchResponse.redirected && fetchResponse.location.href === this.location?.href;\n    return sameLocationRedirect ? \"replace\" : \"advance\"\n  }\n}\n\nconst PageStage = {\n  initial: 0,\n  loading: 1,\n  interactive: 2,\n  complete: 3\n};\n\nclass PageObserver {\n  stage = PageStage.initial\n  started = false\n\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n\n  start() {\n    if (!this.started) {\n      if (this.stage == PageStage.initial) {\n        this.stage = PageStage.loading;\n      }\n      document.addEventListener(\"readystatechange\", this.interpretReadyState, false);\n      addEventListener(\"pagehide\", this.pageWillUnload, false);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      document.removeEventListener(\"readystatechange\", this.interpretReadyState, false);\n      removeEventListener(\"pagehide\", this.pageWillUnload, false);\n      this.started = false;\n    }\n  }\n\n  interpretReadyState = () => {\n    const { readyState } = this;\n    if (readyState == \"interactive\") {\n      this.pageIsInteractive();\n    } else if (readyState == \"complete\") {\n      this.pageIsComplete();\n    }\n  }\n\n  pageIsInteractive() {\n    if (this.stage == PageStage.loading) {\n      this.stage = PageStage.interactive;\n      this.delegate.pageBecameInteractive();\n    }\n  }\n\n  pageIsComplete() {\n    this.pageIsInteractive();\n    if (this.stage == PageStage.interactive) {\n      this.stage = PageStage.complete;\n      this.delegate.pageLoaded();\n    }\n  }\n\n  pageWillUnload = () => {\n    this.delegate.pageWillUnload();\n  }\n\n  get readyState() {\n    return document.readyState\n  }\n}\n\nclass ScrollObserver {\n  started = false\n\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n\n  start() {\n    if (!this.started) {\n      addEventListener(\"scroll\", this.onScroll, false);\n      this.onScroll();\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      removeEventListener(\"scroll\", this.onScroll, false);\n      this.started = false;\n    }\n  }\n\n  onScroll = () => {\n    this.updatePosition({ x: window.pageXOffset, y: window.pageYOffset });\n  }\n\n  // Private\n\n  updatePosition(position) {\n    this.delegate.scrollPositionChanged(position);\n  }\n}\n\nclass StreamMessageRenderer {\n  render({ fragment }) {\n    Bardo.preservingPermanentElements(this, getPermanentElementMapForFragment(fragment), () => {\n      withAutofocusFromFragment(fragment, () => {\n        withPreservedFocus(() => {\n          document.documentElement.appendChild(fragment);\n        });\n      });\n    });\n  }\n\n  // Bardo delegate\n\n  enteringBardo(currentPermanentElement, newPermanentElement) {\n    newPermanentElement.replaceWith(currentPermanentElement.cloneNode(true));\n  }\n\n  leavingBardo() {}\n}\n\nfunction getPermanentElementMapForFragment(fragment) {\n  const permanentElementsInDocument = queryPermanentElementsAll(document.documentElement);\n  const permanentElementMap = {};\n  for (const permanentElementInDocument of permanentElementsInDocument) {\n    const { id } = permanentElementInDocument;\n\n    for (const streamElement of fragment.querySelectorAll(\"turbo-stream\")) {\n      const elementInStream = getPermanentElementById(streamElement.templateElement.content, id);\n\n      if (elementInStream) {\n        permanentElementMap[id] = [permanentElementInDocument, elementInStream];\n      }\n    }\n  }\n\n  return permanentElementMap\n}\n\nasync function withAutofocusFromFragment(fragment, callback) {\n  const generatedID = `turbo-stream-autofocus-${uuid()}`;\n  const turboStreams = fragment.querySelectorAll(\"turbo-stream\");\n  const elementWithAutofocus = firstAutofocusableElementInStreams(turboStreams);\n  let willAutofocusId = null;\n\n  if (elementWithAutofocus) {\n    if (elementWithAutofocus.id) {\n      willAutofocusId = elementWithAutofocus.id;\n    } else {\n      willAutofocusId = generatedID;\n    }\n\n    elementWithAutofocus.id = willAutofocusId;\n  }\n\n  callback();\n  await nextRepaint();\n\n  const hasNoActiveElement = document.activeElement == null || document.activeElement == document.body;\n\n  if (hasNoActiveElement && willAutofocusId) {\n    const elementToAutofocus = document.getElementById(willAutofocusId);\n\n    if (elementIsFocusable(elementToAutofocus)) {\n      elementToAutofocus.focus();\n    }\n    if (elementToAutofocus && elementToAutofocus.id == generatedID) {\n      elementToAutofocus.removeAttribute(\"id\");\n    }\n  }\n}\n\nasync function withPreservedFocus(callback) {\n  const [activeElementBeforeRender, activeElementAfterRender] = await around(callback, () => document.activeElement);\n\n  const restoreFocusTo = activeElementBeforeRender && activeElementBeforeRender.id;\n\n  if (restoreFocusTo) {\n    const elementToFocus = document.getElementById(restoreFocusTo);\n\n    if (elementIsFocusable(elementToFocus) && elementToFocus != activeElementAfterRender) {\n      elementToFocus.focus();\n    }\n  }\n}\n\nfunction firstAutofocusableElementInStreams(nodeListOfStreamElements) {\n  for (const streamElement of nodeListOfStreamElements) {\n    const elementWithAutofocus = queryAutofocusableElement(streamElement.templateElement.content);\n\n    if (elementWithAutofocus) return elementWithAutofocus\n  }\n\n  return null\n}\n\nclass StreamObserver {\n  sources = new Set()\n  #started = false\n\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n\n  start() {\n    if (!this.#started) {\n      this.#started = true;\n      addEventListener(\"turbo:before-fetch-response\", this.inspectFetchResponse, false);\n    }\n  }\n\n  stop() {\n    if (this.#started) {\n      this.#started = false;\n      removeEventListener(\"turbo:before-fetch-response\", this.inspectFetchResponse, false);\n    }\n  }\n\n  connectStreamSource(source) {\n    if (!this.streamSourceIsConnected(source)) {\n      this.sources.add(source);\n      source.addEventListener(\"message\", this.receiveMessageEvent, false);\n    }\n  }\n\n  disconnectStreamSource(source) {\n    if (this.streamSourceIsConnected(source)) {\n      this.sources.delete(source);\n      source.removeEventListener(\"message\", this.receiveMessageEvent, false);\n    }\n  }\n\n  streamSourceIsConnected(source) {\n    return this.sources.has(source)\n  }\n\n  inspectFetchResponse = (event) => {\n    const response = fetchResponseFromEvent(event);\n    if (response && fetchResponseIsStream(response)) {\n      event.preventDefault();\n      this.receiveMessageResponse(response);\n    }\n  }\n\n  receiveMessageEvent = (event) => {\n    if (this.#started && typeof event.data == \"string\") {\n      this.receiveMessageHTML(event.data);\n    }\n  }\n\n  async receiveMessageResponse(response) {\n    const html = await response.responseHTML;\n    if (html) {\n      this.receiveMessageHTML(html);\n    }\n  }\n\n  receiveMessageHTML(html) {\n    this.delegate.receivedMessageFromStream(StreamMessage.wrap(html));\n  }\n}\n\nfunction fetchResponseFromEvent(event) {\n  const fetchResponse = event.detail?.fetchResponse;\n  if (fetchResponse instanceof FetchResponse) {\n    return fetchResponse\n  }\n}\n\nfunction fetchResponseIsStream(response) {\n  const contentType = response.contentType ?? \"\";\n  return contentType.startsWith(StreamMessage.contentType)\n}\n\nclass ErrorRenderer extends Renderer {\n  static renderElement(currentElement, newElement) {\n    const { documentElement, body } = document;\n\n    documentElement.replaceChild(newElement, body);\n  }\n\n  async render() {\n    this.replaceHeadAndBody();\n    this.activateScriptElements();\n  }\n\n  replaceHeadAndBody() {\n    const { documentElement, head } = document;\n    documentElement.replaceChild(this.newHead, head);\n    this.renderElement(this.currentElement, this.newElement);\n  }\n\n  activateScriptElements() {\n    for (const replaceableElement of this.scriptElements) {\n      const parentNode = replaceableElement.parentNode;\n      if (parentNode) {\n        const element = activateScriptElement(replaceableElement);\n        parentNode.replaceChild(element, replaceableElement);\n      }\n    }\n  }\n\n  get newHead() {\n    return this.newSnapshot.headSnapshot.element\n  }\n\n  get scriptElements() {\n    return document.documentElement.querySelectorAll(\"script\")\n  }\n}\n\n// base IIFE to define idiomorph\nvar Idiomorph = (function () {\n\n        //=============================================================================\n        // AND NOW IT BEGINS...\n        //=============================================================================\n        let EMPTY_SET = new Set();\n\n        // default configuration values, updatable by users now\n        let defaults = {\n            morphStyle: \"outerHTML\",\n            callbacks : {\n                beforeNodeAdded: noOp,\n                afterNodeAdded: noOp,\n                beforeNodeMorphed: noOp,\n                afterNodeMorphed: noOp,\n                beforeNodeRemoved: noOp,\n                afterNodeRemoved: noOp,\n                beforeAttributeUpdated: noOp,\n\n            },\n            head: {\n                style: 'merge',\n                shouldPreserve: function (elt) {\n                    return elt.getAttribute(\"im-preserve\") === \"true\";\n                },\n                shouldReAppend: function (elt) {\n                    return elt.getAttribute(\"im-re-append\") === \"true\";\n                },\n                shouldRemove: noOp,\n                afterHeadMorphed: noOp,\n            }\n        };\n\n        //=============================================================================\n        // Core Morphing Algorithm - morph, morphNormalizedContent, morphOldNodeTo, morphChildren\n        //=============================================================================\n        function morph(oldNode, newContent, config = {}) {\n\n            if (oldNode instanceof Document) {\n                oldNode = oldNode.documentElement;\n            }\n\n            if (typeof newContent === 'string') {\n                newContent = parseContent(newContent);\n            }\n\n            let normalizedContent = normalizeContent(newContent);\n\n            let ctx = createMorphContext(oldNode, normalizedContent, config);\n\n            return morphNormalizedContent(oldNode, normalizedContent, ctx);\n        }\n\n        function morphNormalizedContent(oldNode, normalizedNewContent, ctx) {\n            if (ctx.head.block) {\n                let oldHead = oldNode.querySelector('head');\n                let newHead = normalizedNewContent.querySelector('head');\n                if (oldHead && newHead) {\n                    let promises = handleHeadElement(newHead, oldHead, ctx);\n                    // when head promises resolve, call morph again, ignoring the head tag\n                    Promise.all(promises).then(function () {\n                        morphNormalizedContent(oldNode, normalizedNewContent, Object.assign(ctx, {\n                            head: {\n                                block: false,\n                                ignore: true\n                            }\n                        }));\n                    });\n                    return;\n                }\n            }\n\n            if (ctx.morphStyle === \"innerHTML\") {\n\n                // innerHTML, so we are only updating the children\n                morphChildren(normalizedNewContent, oldNode, ctx);\n                return oldNode.children;\n\n            } else if (ctx.morphStyle === \"outerHTML\" || ctx.morphStyle == null) {\n                // otherwise find the best element match in the new content, morph that, and merge its siblings\n                // into either side of the best match\n                let bestMatch = findBestNodeMatch(normalizedNewContent, oldNode, ctx);\n\n                // stash the siblings that will need to be inserted on either side of the best match\n                let previousSibling = bestMatch?.previousSibling;\n                let nextSibling = bestMatch?.nextSibling;\n\n                // morph it\n                let morphedNode = morphOldNodeTo(oldNode, bestMatch, ctx);\n\n                if (bestMatch) {\n                    // if there was a best match, merge the siblings in too and return the\n                    // whole bunch\n                    return insertSiblings(previousSibling, morphedNode, nextSibling);\n                } else {\n                    // otherwise nothing was added to the DOM\n                    return []\n                }\n            } else {\n                throw \"Do not understand how to morph style \" + ctx.morphStyle;\n            }\n        }\n\n\n        /**\n         * @param possibleActiveElement\n         * @param ctx\n         * @returns {boolean}\n         */\n        function ignoreValueOfActiveElement(possibleActiveElement, ctx) {\n            return ctx.ignoreActiveValue && possibleActiveElement === document.activeElement && possibleActiveElement !== document.body;\n        }\n\n        /**\n         * @param oldNode root node to merge content into\n         * @param newContent new content to merge\n         * @param ctx the merge context\n         * @returns {Element} the element that ended up in the DOM\n         */\n        function morphOldNodeTo(oldNode, newContent, ctx) {\n            if (ctx.ignoreActive && oldNode === document.activeElement) ; else if (newContent == null) {\n                if (ctx.callbacks.beforeNodeRemoved(oldNode) === false) return oldNode;\n\n                oldNode.remove();\n                ctx.callbacks.afterNodeRemoved(oldNode);\n                return null;\n            } else if (!isSoftMatch(oldNode, newContent)) {\n                if (ctx.callbacks.beforeNodeRemoved(oldNode) === false) return oldNode;\n                if (ctx.callbacks.beforeNodeAdded(newContent) === false) return oldNode;\n\n                oldNode.parentElement.replaceChild(newContent, oldNode);\n                ctx.callbacks.afterNodeAdded(newContent);\n                ctx.callbacks.afterNodeRemoved(oldNode);\n                return newContent;\n            } else {\n                if (ctx.callbacks.beforeNodeMorphed(oldNode, newContent) === false) return oldNode;\n\n                if (oldNode instanceof HTMLHeadElement && ctx.head.ignore) ; else if (oldNode instanceof HTMLHeadElement && ctx.head.style !== \"morph\") {\n                    handleHeadElement(newContent, oldNode, ctx);\n                } else {\n                    syncNodeFrom(newContent, oldNode, ctx);\n                    if (!ignoreValueOfActiveElement(oldNode, ctx)) {\n                        morphChildren(newContent, oldNode, ctx);\n                    }\n                }\n                ctx.callbacks.afterNodeMorphed(oldNode, newContent);\n                return oldNode;\n            }\n        }\n\n        /**\n         * This is the core algorithm for matching up children.  The idea is to use id sets to try to match up\n         * nodes as faithfully as possible.  We greedily match, which allows us to keep the algorithm fast, but\n         * by using id sets, we are able to better match up with content deeper in the DOM.\n         *\n         * Basic algorithm is, for each node in the new content:\n         *\n         * - if we have reached the end of the old parent, append the new content\n         * - if the new content has an id set match with the current insertion point, morph\n         * - search for an id set match\n         * - if id set match found, morph\n         * - otherwise search for a \"soft\" match\n         * - if a soft match is found, morph\n         * - otherwise, prepend the new node before the current insertion point\n         *\n         * The two search algorithms terminate if competing node matches appear to outweigh what can be achieved\n         * with the current node.  See findIdSetMatch() and findSoftMatch() for details.\n         *\n         * @param {Element} newParent the parent element of the new content\n         * @param {Element } oldParent the old content that we are merging the new content into\n         * @param ctx the merge context\n         */\n        function morphChildren(newParent, oldParent, ctx) {\n\n            let nextNewChild = newParent.firstChild;\n            let insertionPoint = oldParent.firstChild;\n            let newChild;\n\n            // run through all the new content\n            while (nextNewChild) {\n\n                newChild = nextNewChild;\n                nextNewChild = newChild.nextSibling;\n\n                // if we are at the end of the exiting parent's children, just append\n                if (insertionPoint == null) {\n                    if (ctx.callbacks.beforeNodeAdded(newChild) === false) return;\n\n                    oldParent.appendChild(newChild);\n                    ctx.callbacks.afterNodeAdded(newChild);\n                    removeIdsFromConsideration(ctx, newChild);\n                    continue;\n                }\n\n                // if the current node has an id set match then morph\n                if (isIdSetMatch(newChild, insertionPoint, ctx)) {\n                    morphOldNodeTo(insertionPoint, newChild, ctx);\n                    insertionPoint = insertionPoint.nextSibling;\n                    removeIdsFromConsideration(ctx, newChild);\n                    continue;\n                }\n\n                // otherwise search forward in the existing old children for an id set match\n                let idSetMatch = findIdSetMatch(newParent, oldParent, newChild, insertionPoint, ctx);\n\n                // if we found a potential match, remove the nodes until that point and morph\n                if (idSetMatch) {\n                    insertionPoint = removeNodesBetween(insertionPoint, idSetMatch, ctx);\n                    morphOldNodeTo(idSetMatch, newChild, ctx);\n                    removeIdsFromConsideration(ctx, newChild);\n                    continue;\n                }\n\n                // no id set match found, so scan forward for a soft match for the current node\n                let softMatch = findSoftMatch(newParent, oldParent, newChild, insertionPoint, ctx);\n\n                // if we found a soft match for the current node, morph\n                if (softMatch) {\n                    insertionPoint = removeNodesBetween(insertionPoint, softMatch, ctx);\n                    morphOldNodeTo(softMatch, newChild, ctx);\n                    removeIdsFromConsideration(ctx, newChild);\n                    continue;\n                }\n\n                // abandon all hope of morphing, just insert the new child before the insertion point\n                // and move on\n                if (ctx.callbacks.beforeNodeAdded(newChild) === false) return;\n\n                oldParent.insertBefore(newChild, insertionPoint);\n                ctx.callbacks.afterNodeAdded(newChild);\n                removeIdsFromConsideration(ctx, newChild);\n            }\n\n            // remove any remaining old nodes that didn't match up with new content\n            while (insertionPoint !== null) {\n\n                let tempNode = insertionPoint;\n                insertionPoint = insertionPoint.nextSibling;\n                removeNode(tempNode, ctx);\n            }\n        }\n\n        //=============================================================================\n        // Attribute Syncing Code\n        //=============================================================================\n\n        /**\n         * @param attr {String} the attribute to be mutated\n         * @param to {Element} the element that is going to be updated\n         * @param updateType {(\"update\"|\"remove\")}\n         * @param ctx the merge context\n         * @returns {boolean} true if the attribute should be ignored, false otherwise\n         */\n        function ignoreAttribute(attr, to, updateType, ctx) {\n            if(attr === 'value' && ctx.ignoreActiveValue && to === document.activeElement){\n                return true;\n            }\n            return ctx.callbacks.beforeAttributeUpdated(attr, to, updateType) === false;\n        }\n\n        /**\n         * syncs a given node with another node, copying over all attributes and\n         * inner element state from the 'from' node to the 'to' node\n         *\n         * @param {Element} from the element to copy attributes & state from\n         * @param {Element} to the element to copy attributes & state to\n         * @param ctx the merge context\n         */\n        function syncNodeFrom(from, to, ctx) {\n            let type = from.nodeType;\n\n            // if is an element type, sync the attributes from the\n            // new node into the new node\n            if (type === 1 /* element type */) {\n                const fromAttributes = from.attributes;\n                const toAttributes = to.attributes;\n                for (const fromAttribute of fromAttributes) {\n                    if (ignoreAttribute(fromAttribute.name, to, 'update', ctx)) {\n                        continue;\n                    }\n                    if (to.getAttribute(fromAttribute.name) !== fromAttribute.value) {\n                        to.setAttribute(fromAttribute.name, fromAttribute.value);\n                    }\n                }\n                // iterate backwards to avoid skipping over items when a delete occurs\n                for (let i = toAttributes.length - 1; 0 <= i; i--) {\n                    const toAttribute = toAttributes[i];\n                    if (ignoreAttribute(toAttribute.name, to, 'remove', ctx)) {\n                        continue;\n                    }\n                    if (!from.hasAttribute(toAttribute.name)) {\n                        to.removeAttribute(toAttribute.name);\n                    }\n                }\n            }\n\n            // sync text nodes\n            if (type === 8 /* comment */ || type === 3 /* text */) {\n                if (to.nodeValue !== from.nodeValue) {\n                    to.nodeValue = from.nodeValue;\n                }\n            }\n\n            if (!ignoreValueOfActiveElement(to, ctx)) {\n                // sync input values\n                syncInputValue(from, to, ctx);\n            }\n        }\n\n        /**\n         * @param from {Element} element to sync the value from\n         * @param to {Element} element to sync the value to\n         * @param attributeName {String} the attribute name\n         * @param ctx the merge context\n         */\n        function syncBooleanAttribute(from, to, attributeName, ctx) {\n            if (from[attributeName] !== to[attributeName]) {\n                let ignoreUpdate = ignoreAttribute(attributeName, to, 'update', ctx);\n                if (!ignoreUpdate) {\n                    to[attributeName] = from[attributeName];\n                }\n                if (from[attributeName]) {\n                    if (!ignoreUpdate) {\n                        to.setAttribute(attributeName, from[attributeName]);\n                    }\n                } else {\n                    if (!ignoreAttribute(attributeName, to, 'remove', ctx)) {\n                        to.removeAttribute(attributeName);\n                    }\n                }\n            }\n        }\n\n        /**\n         * NB: many bothans died to bring us information:\n         *\n         *  https://github.com/patrick-steele-idem/morphdom/blob/master/src/specialElHandlers.js\n         *  https://github.com/choojs/nanomorph/blob/master/lib/morph.jsL113\n         *\n         * @param from {Element} the element to sync the input value from\n         * @param to {Element} the element to sync the input value to\n         * @param ctx the merge context\n         */\n        function syncInputValue(from, to, ctx) {\n            if (from instanceof HTMLInputElement &&\n                to instanceof HTMLInputElement &&\n                from.type !== 'file') {\n\n                let fromValue = from.value;\n                let toValue = to.value;\n\n                // sync boolean attributes\n                syncBooleanAttribute(from, to, 'checked', ctx);\n                syncBooleanAttribute(from, to, 'disabled', ctx);\n\n                if (!from.hasAttribute('value')) {\n                    if (!ignoreAttribute('value', to, 'remove', ctx)) {\n                        to.value = '';\n                        to.removeAttribute('value');\n                    }\n                } else if (fromValue !== toValue) {\n                    if (!ignoreAttribute('value', to, 'update', ctx)) {\n                        to.setAttribute('value', fromValue);\n                        to.value = fromValue;\n                    }\n                }\n            } else if (from instanceof HTMLOptionElement) {\n                syncBooleanAttribute(from, to, 'selected', ctx);\n            } else if (from instanceof HTMLTextAreaElement && to instanceof HTMLTextAreaElement) {\n                let fromValue = from.value;\n                let toValue = to.value;\n                if (ignoreAttribute('value', to, 'update', ctx)) {\n                    return;\n                }\n                if (fromValue !== toValue) {\n                    to.value = fromValue;\n                }\n                if (to.firstChild && to.firstChild.nodeValue !== fromValue) {\n                    to.firstChild.nodeValue = fromValue;\n                }\n            }\n        }\n\n        //=============================================================================\n        // the HEAD tag can be handled specially, either w/ a 'merge' or 'append' style\n        //=============================================================================\n        function handleHeadElement(newHeadTag, currentHead, ctx) {\n\n            let added = [];\n            let removed = [];\n            let preserved = [];\n            let nodesToAppend = [];\n\n            let headMergeStyle = ctx.head.style;\n\n            // put all new head elements into a Map, by their outerHTML\n            let srcToNewHeadNodes = new Map();\n            for (const newHeadChild of newHeadTag.children) {\n                srcToNewHeadNodes.set(newHeadChild.outerHTML, newHeadChild);\n            }\n\n            // for each elt in the current head\n            for (const currentHeadElt of currentHead.children) {\n\n                // If the current head element is in the map\n                let inNewContent = srcToNewHeadNodes.has(currentHeadElt.outerHTML);\n                let isReAppended = ctx.head.shouldReAppend(currentHeadElt);\n                let isPreserved = ctx.head.shouldPreserve(currentHeadElt);\n                if (inNewContent || isPreserved) {\n                    if (isReAppended) {\n                        // remove the current version and let the new version replace it and re-execute\n                        removed.push(currentHeadElt);\n                    } else {\n                        // this element already exists and should not be re-appended, so remove it from\n                        // the new content map, preserving it in the DOM\n                        srcToNewHeadNodes.delete(currentHeadElt.outerHTML);\n                        preserved.push(currentHeadElt);\n                    }\n                } else {\n                    if (headMergeStyle === \"append\") {\n                        // we are appending and this existing element is not new content\n                        // so if and only if it is marked for re-append do we do anything\n                        if (isReAppended) {\n                            removed.push(currentHeadElt);\n                            nodesToAppend.push(currentHeadElt);\n                        }\n                    } else {\n                        // if this is a merge, we remove this content since it is not in the new head\n                        if (ctx.head.shouldRemove(currentHeadElt) !== false) {\n                            removed.push(currentHeadElt);\n                        }\n                    }\n                }\n            }\n\n            // Push the remaining new head elements in the Map into the\n            // nodes to append to the head tag\n            nodesToAppend.push(...srcToNewHeadNodes.values());\n\n            let promises = [];\n            for (const newNode of nodesToAppend) {\n                let newElt = document.createRange().createContextualFragment(newNode.outerHTML).firstChild;\n                if (ctx.callbacks.beforeNodeAdded(newElt) !== false) {\n                    if (newElt.href || newElt.src) {\n                        let resolve = null;\n                        let promise = new Promise(function (_resolve) {\n                            resolve = _resolve;\n                        });\n                        newElt.addEventListener('load', function () {\n                            resolve();\n                        });\n                        promises.push(promise);\n                    }\n                    currentHead.appendChild(newElt);\n                    ctx.callbacks.afterNodeAdded(newElt);\n                    added.push(newElt);\n                }\n            }\n\n            // remove all removed elements, after we have appended the new elements to avoid\n            // additional network requests for things like style sheets\n            for (const removedElement of removed) {\n                if (ctx.callbacks.beforeNodeRemoved(removedElement) !== false) {\n                    currentHead.removeChild(removedElement);\n                    ctx.callbacks.afterNodeRemoved(removedElement);\n                }\n            }\n\n            ctx.head.afterHeadMorphed(currentHead, {added: added, kept: preserved, removed: removed});\n            return promises;\n        }\n\n        function noOp() {\n        }\n\n        /*\n          Deep merges the config object and the Idiomoroph.defaults object to\n          produce a final configuration object\n         */\n        function mergeDefaults(config) {\n            let finalConfig = {};\n            // copy top level stuff into final config\n            Object.assign(finalConfig, defaults);\n            Object.assign(finalConfig, config);\n\n            // copy callbacks into final config (do this to deep merge the callbacks)\n            finalConfig.callbacks = {};\n            Object.assign(finalConfig.callbacks, defaults.callbacks);\n            Object.assign(finalConfig.callbacks, config.callbacks);\n\n            // copy head config into final config  (do this to deep merge the head)\n            finalConfig.head = {};\n            Object.assign(finalConfig.head, defaults.head);\n            Object.assign(finalConfig.head, config.head);\n            return finalConfig;\n        }\n\n        function createMorphContext(oldNode, newContent, config) {\n            config = mergeDefaults(config);\n            return {\n                target: oldNode,\n                newContent: newContent,\n                config: config,\n                morphStyle: config.morphStyle,\n                ignoreActive: config.ignoreActive,\n                ignoreActiveValue: config.ignoreActiveValue,\n                idMap: createIdMap(oldNode, newContent),\n                deadIds: new Set(),\n                callbacks: config.callbacks,\n                head: config.head\n            }\n        }\n\n        function isIdSetMatch(node1, node2, ctx) {\n            if (node1 == null || node2 == null) {\n                return false;\n            }\n            if (node1.nodeType === node2.nodeType && node1.tagName === node2.tagName) {\n                if (node1.id !== \"\" && node1.id === node2.id) {\n                    return true;\n                } else {\n                    return getIdIntersectionCount(ctx, node1, node2) > 0;\n                }\n            }\n            return false;\n        }\n\n        function isSoftMatch(node1, node2) {\n            if (node1 == null || node2 == null) {\n                return false;\n            }\n            return node1.nodeType === node2.nodeType && node1.tagName === node2.tagName\n        }\n\n        function removeNodesBetween(startInclusive, endExclusive, ctx) {\n            while (startInclusive !== endExclusive) {\n                let tempNode = startInclusive;\n                startInclusive = startInclusive.nextSibling;\n                removeNode(tempNode, ctx);\n            }\n            removeIdsFromConsideration(ctx, endExclusive);\n            return endExclusive.nextSibling;\n        }\n\n        //=============================================================================\n        // Scans forward from the insertionPoint in the old parent looking for a potential id match\n        // for the newChild.  We stop if we find a potential id match for the new child OR\n        // if the number of potential id matches we are discarding is greater than the\n        // potential id matches for the new child\n        //=============================================================================\n        function findIdSetMatch(newContent, oldParent, newChild, insertionPoint, ctx) {\n\n            // max id matches we are willing to discard in our search\n            let newChildPotentialIdCount = getIdIntersectionCount(ctx, newChild, oldParent);\n\n            let potentialMatch = null;\n\n            // only search forward if there is a possibility of an id match\n            if (newChildPotentialIdCount > 0) {\n                let potentialMatch = insertionPoint;\n                // if there is a possibility of an id match, scan forward\n                // keep track of the potential id match count we are discarding (the\n                // newChildPotentialIdCount must be greater than this to make it likely\n                // worth it)\n                let otherMatchCount = 0;\n                while (potentialMatch != null) {\n\n                    // If we have an id match, return the current potential match\n                    if (isIdSetMatch(newChild, potentialMatch, ctx)) {\n                        return potentialMatch;\n                    }\n\n                    // computer the other potential matches of this new content\n                    otherMatchCount += getIdIntersectionCount(ctx, potentialMatch, newContent);\n                    if (otherMatchCount > newChildPotentialIdCount) {\n                        // if we have more potential id matches in _other_ content, we\n                        // do not have a good candidate for an id match, so return null\n                        return null;\n                    }\n\n                    // advanced to the next old content child\n                    potentialMatch = potentialMatch.nextSibling;\n                }\n            }\n            return potentialMatch;\n        }\n\n        //=============================================================================\n        // Scans forward from the insertionPoint in the old parent looking for a potential soft match\n        // for the newChild.  We stop if we find a potential soft match for the new child OR\n        // if we find a potential id match in the old parents children OR if we find two\n        // potential soft matches for the next two pieces of new content\n        //=============================================================================\n        function findSoftMatch(newContent, oldParent, newChild, insertionPoint, ctx) {\n\n            let potentialSoftMatch = insertionPoint;\n            let nextSibling = newChild.nextSibling;\n            let siblingSoftMatchCount = 0;\n\n            while (potentialSoftMatch != null) {\n\n                if (getIdIntersectionCount(ctx, potentialSoftMatch, newContent) > 0) {\n                    // the current potential soft match has a potential id set match with the remaining new\n                    // content so bail out of looking\n                    return null;\n                }\n\n                // if we have a soft match with the current node, return it\n                if (isSoftMatch(newChild, potentialSoftMatch)) {\n                    return potentialSoftMatch;\n                }\n\n                if (isSoftMatch(nextSibling, potentialSoftMatch)) {\n                    // the next new node has a soft match with this node, so\n                    // increment the count of future soft matches\n                    siblingSoftMatchCount++;\n                    nextSibling = nextSibling.nextSibling;\n\n                    // If there are two future soft matches, bail to allow the siblings to soft match\n                    // so that we don't consume future soft matches for the sake of the current node\n                    if (siblingSoftMatchCount >= 2) {\n                        return null;\n                    }\n                }\n\n                // advanced to the next old content child\n                potentialSoftMatch = potentialSoftMatch.nextSibling;\n            }\n\n            return potentialSoftMatch;\n        }\n\n        function parseContent(newContent) {\n            let parser = new DOMParser();\n\n            // remove svgs to avoid false-positive matches on head, etc.\n            let contentWithSvgsRemoved = newContent.replace(/<svg(\\s[^>]*>|>)([\\s\\S]*?)<\\/svg>/gim, '');\n\n            // if the newContent contains a html, head or body tag, we can simply parse it w/o wrapping\n            if (contentWithSvgsRemoved.match(/<\\/html>/) || contentWithSvgsRemoved.match(/<\\/head>/) || contentWithSvgsRemoved.match(/<\\/body>/)) {\n                let content = parser.parseFromString(newContent, \"text/html\");\n                // if it is a full HTML document, return the document itself as the parent container\n                if (contentWithSvgsRemoved.match(/<\\/html>/)) {\n                    content.generatedByIdiomorph = true;\n                    return content;\n                } else {\n                    // otherwise return the html element as the parent container\n                    let htmlElement = content.firstChild;\n                    if (htmlElement) {\n                        htmlElement.generatedByIdiomorph = true;\n                        return htmlElement;\n                    } else {\n                        return null;\n                    }\n                }\n            } else {\n                // if it is partial HTML, wrap it in a template tag to provide a parent element and also to help\n                // deal with touchy tags like tr, tbody, etc.\n                let responseDoc = parser.parseFromString(\"<body><template>\" + newContent + \"</template></body>\", \"text/html\");\n                let content = responseDoc.body.querySelector('template').content;\n                content.generatedByIdiomorph = true;\n                return content\n            }\n        }\n\n        function normalizeContent(newContent) {\n            if (newContent == null) {\n                // noinspection UnnecessaryLocalVariableJS\n                const dummyParent = document.createElement('div');\n                return dummyParent;\n            } else if (newContent.generatedByIdiomorph) {\n                // the template tag created by idiomorph parsing can serve as a dummy parent\n                return newContent;\n            } else if (newContent instanceof Node) {\n                // a single node is added as a child to a dummy parent\n                const dummyParent = document.createElement('div');\n                dummyParent.append(newContent);\n                return dummyParent;\n            } else {\n                // all nodes in the array or HTMLElement collection are consolidated under\n                // a single dummy parent element\n                const dummyParent = document.createElement('div');\n                for (const elt of [...newContent]) {\n                    dummyParent.append(elt);\n                }\n                return dummyParent;\n            }\n        }\n\n        function insertSiblings(previousSibling, morphedNode, nextSibling) {\n            let stack = [];\n            let added = [];\n            while (previousSibling != null) {\n                stack.push(previousSibling);\n                previousSibling = previousSibling.previousSibling;\n            }\n            while (stack.length > 0) {\n                let node = stack.pop();\n                added.push(node); // push added preceding siblings on in order and insert\n                morphedNode.parentElement.insertBefore(node, morphedNode);\n            }\n            added.push(morphedNode);\n            while (nextSibling != null) {\n                stack.push(nextSibling);\n                added.push(nextSibling); // here we are going in order, so push on as we scan, rather than add\n                nextSibling = nextSibling.nextSibling;\n            }\n            while (stack.length > 0) {\n                morphedNode.parentElement.insertBefore(stack.pop(), morphedNode.nextSibling);\n            }\n            return added;\n        }\n\n        function findBestNodeMatch(newContent, oldNode, ctx) {\n            let currentElement;\n            currentElement = newContent.firstChild;\n            let bestElement = currentElement;\n            let score = 0;\n            while (currentElement) {\n                let newScore = scoreElement(currentElement, oldNode, ctx);\n                if (newScore > score) {\n                    bestElement = currentElement;\n                    score = newScore;\n                }\n                currentElement = currentElement.nextSibling;\n            }\n            return bestElement;\n        }\n\n        function scoreElement(node1, node2, ctx) {\n            if (isSoftMatch(node1, node2)) {\n                return .5 + getIdIntersectionCount(ctx, node1, node2);\n            }\n            return 0;\n        }\n\n        function removeNode(tempNode, ctx) {\n            removeIdsFromConsideration(ctx, tempNode);\n            if (ctx.callbacks.beforeNodeRemoved(tempNode) === false) return;\n\n            tempNode.remove();\n            ctx.callbacks.afterNodeRemoved(tempNode);\n        }\n\n        //=============================================================================\n        // ID Set Functions\n        //=============================================================================\n\n        function isIdInConsideration(ctx, id) {\n            return !ctx.deadIds.has(id);\n        }\n\n        function idIsWithinNode(ctx, id, targetNode) {\n            let idSet = ctx.idMap.get(targetNode) || EMPTY_SET;\n            return idSet.has(id);\n        }\n\n        function removeIdsFromConsideration(ctx, node) {\n            let idSet = ctx.idMap.get(node) || EMPTY_SET;\n            for (const id of idSet) {\n                ctx.deadIds.add(id);\n            }\n        }\n\n        function getIdIntersectionCount(ctx, node1, node2) {\n            let sourceSet = ctx.idMap.get(node1) || EMPTY_SET;\n            let matchCount = 0;\n            for (const id of sourceSet) {\n                // a potential match is an id in the source and potentialIdsSet, but\n                // that has not already been merged into the DOM\n                if (isIdInConsideration(ctx, id) && idIsWithinNode(ctx, id, node2)) {\n                    ++matchCount;\n                }\n            }\n            return matchCount;\n        }\n\n        /**\n         * A bottom up algorithm that finds all elements with ids inside of the node\n         * argument and populates id sets for those nodes and all their parents, generating\n         * a set of ids contained within all nodes for the entire hierarchy in the DOM\n         *\n         * @param node {Element}\n         * @param {Map<Node, Set<String>>} idMap\n         */\n        function populateIdMapForNode(node, idMap) {\n            let nodeParent = node.parentElement;\n            // find all elements with an id property\n            let idElements = node.querySelectorAll('[id]');\n            for (const elt of idElements) {\n                let current = elt;\n                // walk up the parent hierarchy of that element, adding the id\n                // of element to the parent's id set\n                while (current !== nodeParent && current != null) {\n                    let idSet = idMap.get(current);\n                    // if the id set doesn't exist, create it and insert it in the  map\n                    if (idSet == null) {\n                        idSet = new Set();\n                        idMap.set(current, idSet);\n                    }\n                    idSet.add(elt.id);\n                    current = current.parentElement;\n                }\n            }\n        }\n\n        /**\n         * This function computes a map of nodes to all ids contained within that node (inclusive of the\n         * node).  This map can be used to ask if two nodes have intersecting sets of ids, which allows\n         * for a looser definition of \"matching\" than tradition id matching, and allows child nodes\n         * to contribute to a parent nodes matching.\n         *\n         * @param {Element} oldContent  the old content that will be morphed\n         * @param {Element} newContent  the new content to morph to\n         * @returns {Map<Node, Set<String>>} a map of nodes to id sets for the\n         */\n        function createIdMap(oldContent, newContent) {\n            let idMap = new Map();\n            populateIdMapForNode(oldContent, idMap);\n            populateIdMapForNode(newContent, idMap);\n            return idMap;\n        }\n\n        //=============================================================================\n        // This is what ends up becoming the Idiomorph global object\n        //=============================================================================\n        return {\n            morph,\n            defaults\n        }\n    })();\n\nclass PageRenderer extends Renderer {\n  static renderElement(currentElement, newElement) {\n    if (document.body && newElement instanceof HTMLBodyElement) {\n      document.body.replaceWith(newElement);\n    } else {\n      document.documentElement.appendChild(newElement);\n    }\n  }\n\n  get shouldRender() {\n    return this.newSnapshot.isVisitable && this.trackedElementsAreIdentical\n  }\n\n  get reloadReason() {\n    if (!this.newSnapshot.isVisitable) {\n      return {\n        reason: \"turbo_visit_control_is_reload\"\n      }\n    }\n\n    if (!this.trackedElementsAreIdentical) {\n      return {\n        reason: \"tracked_element_mismatch\"\n      }\n    }\n  }\n\n  async prepareToRender() {\n    this.#setLanguage();\n    await this.mergeHead();\n  }\n\n  async render() {\n    if (this.willRender) {\n      await this.replaceBody();\n    }\n  }\n\n  finishRendering() {\n    super.finishRendering();\n    if (!this.isPreview) {\n      this.focusFirstAutofocusableElement();\n    }\n  }\n\n  get currentHeadSnapshot() {\n    return this.currentSnapshot.headSnapshot\n  }\n\n  get newHeadSnapshot() {\n    return this.newSnapshot.headSnapshot\n  }\n\n  get newElement() {\n    return this.newSnapshot.element\n  }\n\n  #setLanguage() {\n    const { documentElement } = this.currentSnapshot;\n    const { lang } = this.newSnapshot;\n\n    if (lang) {\n      documentElement.setAttribute(\"lang\", lang);\n    } else {\n      documentElement.removeAttribute(\"lang\");\n    }\n  }\n\n  async mergeHead() {\n    const mergedHeadElements = this.mergeProvisionalElements();\n    const newStylesheetElements = this.copyNewHeadStylesheetElements();\n    this.copyNewHeadScriptElements();\n\n    await mergedHeadElements;\n    await newStylesheetElements;\n\n    if (this.willRender) {\n      this.removeUnusedDynamicStylesheetElements();\n    }\n  }\n\n  async replaceBody() {\n    await this.preservingPermanentElements(async () => {\n      this.activateNewBody();\n      await this.assignNewBody();\n    });\n  }\n\n  get trackedElementsAreIdentical() {\n    return this.currentHeadSnapshot.trackedElementSignature == this.newHeadSnapshot.trackedElementSignature\n  }\n\n  async copyNewHeadStylesheetElements() {\n    const loadingElements = [];\n\n    for (const element of this.newHeadStylesheetElements) {\n      loadingElements.push(waitForLoad(element));\n\n      document.head.appendChild(element);\n    }\n\n    await Promise.all(loadingElements);\n  }\n\n  copyNewHeadScriptElements() {\n    for (const element of this.newHeadScriptElements) {\n      document.head.appendChild(activateScriptElement(element));\n    }\n  }\n\n  removeUnusedDynamicStylesheetElements() {\n    for (const element of this.unusedDynamicStylesheetElements) {\n      document.head.removeChild(element);\n    }\n  }\n\n  async mergeProvisionalElements() {\n    const newHeadElements = [...this.newHeadProvisionalElements];\n\n    for (const element of this.currentHeadProvisionalElements) {\n      if (!this.isCurrentElementInElementList(element, newHeadElements)) {\n        document.head.removeChild(element);\n      }\n    }\n\n    for (const element of newHeadElements) {\n      document.head.appendChild(element);\n    }\n  }\n\n  isCurrentElementInElementList(element, elementList) {\n    for (const [index, newElement] of elementList.entries()) {\n      // if title element...\n      if (element.tagName == \"TITLE\") {\n        if (newElement.tagName != \"TITLE\") {\n          continue\n        }\n        if (element.innerHTML == newElement.innerHTML) {\n          elementList.splice(index, 1);\n          return true\n        }\n      }\n\n      // if any other element...\n      if (newElement.isEqualNode(element)) {\n        elementList.splice(index, 1);\n        return true\n      }\n    }\n\n    return false\n  }\n\n  removeCurrentHeadProvisionalElements() {\n    for (const element of this.currentHeadProvisionalElements) {\n      document.head.removeChild(element);\n    }\n  }\n\n  copyNewHeadProvisionalElements() {\n    for (const element of this.newHeadProvisionalElements) {\n      document.head.appendChild(element);\n    }\n  }\n\n  activateNewBody() {\n    document.adoptNode(this.newElement);\n    this.activateNewBodyScriptElements();\n  }\n\n  activateNewBodyScriptElements() {\n    for (const inertScriptElement of this.newBodyScriptElements) {\n      const activatedScriptElement = activateScriptElement(inertScriptElement);\n      inertScriptElement.replaceWith(activatedScriptElement);\n    }\n  }\n\n  async assignNewBody() {\n    await this.renderElement(this.currentElement, this.newElement);\n  }\n\n  get unusedDynamicStylesheetElements() {\n    return this.oldHeadStylesheetElements.filter((element) => {\n      return element.getAttribute(\"data-turbo-track\") === \"dynamic\"\n    })\n  }\n\n  get oldHeadStylesheetElements() {\n    return this.currentHeadSnapshot.getStylesheetElementsNotInSnapshot(this.newHeadSnapshot)\n  }\n\n  get newHeadStylesheetElements() {\n    return this.newHeadSnapshot.getStylesheetElementsNotInSnapshot(this.currentHeadSnapshot)\n  }\n\n  get newHeadScriptElements() {\n    return this.newHeadSnapshot.getScriptElementsNotInSnapshot(this.currentHeadSnapshot)\n  }\n\n  get currentHeadProvisionalElements() {\n    return this.currentHeadSnapshot.provisionalElements\n  }\n\n  get newHeadProvisionalElements() {\n    return this.newHeadSnapshot.provisionalElements\n  }\n\n  get newBodyScriptElements() {\n    return this.newElement.querySelectorAll(\"script\")\n  }\n}\n\nclass MorphRenderer extends PageRenderer {\n  async render() {\n    if (this.willRender) await this.#morphBody();\n  }\n\n  get renderMethod() {\n    return \"morph\"\n  }\n\n  // Private\n\n  async #morphBody() {\n    this.#morphElements(this.currentElement, this.newElement);\n    this.#reloadRemoteFrames();\n\n    dispatch(\"turbo:morph\", {\n      detail: {\n        currentElement: this.currentElement,\n        newElement: this.newElement\n      }\n    });\n  }\n\n  #morphElements(currentElement, newElement, morphStyle = \"outerHTML\") {\n    this.isMorphingTurboFrame = this.#isFrameReloadedWithMorph(currentElement);\n\n    Idiomorph.morph(currentElement, newElement, {\n      ignoreActiveValue: true,\n      morphStyle: morphStyle,\n      callbacks: {\n        beforeNodeAdded: this.#shouldAddElement,\n        beforeNodeMorphed: this.#shouldMorphElement,\n        beforeAttributeUpdated: this.#shouldUpdateAttribute,\n        beforeNodeRemoved: this.#shouldRemoveElement,\n        afterNodeMorphed: this.#didMorphElement\n      }\n    });\n  }\n\n  #shouldAddElement = (node) => {\n    return !(node.id && node.hasAttribute(\"data-turbo-permanent\") && document.getElementById(node.id))\n  }\n\n  #shouldMorphElement = (oldNode, newNode) => {\n    if (oldNode instanceof HTMLElement) {\n      if (!oldNode.hasAttribute(\"data-turbo-permanent\") && (this.isMorphingTurboFrame || !this.#isFrameReloadedWithMorph(oldNode))) {\n        const event = dispatch(\"turbo:before-morph-element\", {\n          cancelable: true,\n          target: oldNode,\n          detail: {\n            newElement: newNode\n          }\n        });\n\n        return !event.defaultPrevented\n      } else {\n        return false\n      }\n    }\n  }\n\n  #shouldUpdateAttribute = (attributeName, target, mutationType) => {\n    const event = dispatch(\"turbo:before-morph-attribute\", { cancelable: true, target, detail: { attributeName, mutationType } });\n\n    return !event.defaultPrevented\n  }\n\n  #didMorphElement = (oldNode, newNode) => {\n    if (newNode instanceof HTMLElement) {\n      dispatch(\"turbo:morph-element\", {\n        target: oldNode,\n        detail: {\n          newElement: newNode\n        }\n      });\n    }\n  }\n\n  #shouldRemoveElement = (node) => {\n    return this.#shouldMorphElement(node)\n  }\n\n  #reloadRemoteFrames() {\n    this.#remoteFrames().forEach((frame) => {\n      if (this.#isFrameReloadedWithMorph(frame)) {\n        this.#renderFrameWithMorph(frame);\n        frame.reload();\n      }\n    });\n  }\n\n  #renderFrameWithMorph(frame) {\n    frame.addEventListener(\"turbo:before-frame-render\", (event) => {\n      event.detail.render = this.#morphFrameUpdate;\n    }, { once: true });\n  }\n\n  #morphFrameUpdate = (currentElement, newElement) => {\n    dispatch(\"turbo:before-frame-morph\", {\n      target: currentElement,\n      detail: { currentElement, newElement }\n    });\n    this.#morphElements(currentElement, newElement.children, \"innerHTML\");\n  }\n\n  #isFrameReloadedWithMorph(element) {\n    return element.src && element.refresh === \"morph\"\n  }\n\n  #remoteFrames() {\n    return Array.from(document.querySelectorAll('turbo-frame[src]')).filter(frame => {\n      return !frame.closest('[data-turbo-permanent]')\n    })\n  }\n}\n\nclass SnapshotCache {\n  keys = []\n  snapshots = {}\n\n  constructor(size) {\n    this.size = size;\n  }\n\n  has(location) {\n    return toCacheKey(location) in this.snapshots\n  }\n\n  get(location) {\n    if (this.has(location)) {\n      const snapshot = this.read(location);\n      this.touch(location);\n      return snapshot\n    }\n  }\n\n  put(location, snapshot) {\n    this.write(location, snapshot);\n    this.touch(location);\n    return snapshot\n  }\n\n  clear() {\n    this.snapshots = {};\n  }\n\n  // Private\n\n  read(location) {\n    return this.snapshots[toCacheKey(location)]\n  }\n\n  write(location, snapshot) {\n    this.snapshots[toCacheKey(location)] = snapshot;\n  }\n\n  touch(location) {\n    const key = toCacheKey(location);\n    const index = this.keys.indexOf(key);\n    if (index > -1) this.keys.splice(index, 1);\n    this.keys.unshift(key);\n    this.trim();\n  }\n\n  trim() {\n    for (const key of this.keys.splice(this.size)) {\n      delete this.snapshots[key];\n    }\n  }\n}\n\nclass PageView extends View {\n  snapshotCache = new SnapshotCache(10)\n  lastRenderedLocation = new URL(location.href)\n  forceReloaded = false\n\n  shouldTransitionTo(newSnapshot) {\n    return this.snapshot.prefersViewTransitions && newSnapshot.prefersViewTransitions\n  }\n\n  renderPage(snapshot, isPreview = false, willRender = true, visit) {\n    const shouldMorphPage = this.isPageRefresh(visit) && this.snapshot.shouldMorphPage;\n    const rendererClass = shouldMorphPage ? MorphRenderer : PageRenderer;\n\n    const renderer = new rendererClass(this.snapshot, snapshot, PageRenderer.renderElement, isPreview, willRender);\n\n    if (!renderer.shouldRender) {\n      this.forceReloaded = true;\n    } else {\n      visit?.changeHistory();\n    }\n\n    return this.render(renderer)\n  }\n\n  renderError(snapshot, visit) {\n    visit?.changeHistory();\n    const renderer = new ErrorRenderer(this.snapshot, snapshot, ErrorRenderer.renderElement, false);\n    return this.render(renderer)\n  }\n\n  clearSnapshotCache() {\n    this.snapshotCache.clear();\n  }\n\n  async cacheSnapshot(snapshot = this.snapshot) {\n    if (snapshot.isCacheable) {\n      this.delegate.viewWillCacheSnapshot();\n      const { lastRenderedLocation: location } = this;\n      await nextEventLoopTick();\n      const cachedSnapshot = snapshot.clone();\n      this.snapshotCache.put(location, cachedSnapshot);\n      return cachedSnapshot\n    }\n  }\n\n  getCachedSnapshotForLocation(location) {\n    return this.snapshotCache.get(location)\n  }\n\n  isPageRefresh(visit) {\n    return !visit || (this.lastRenderedLocation.pathname === visit.location.pathname && visit.action === \"replace\")\n  }\n\n  shouldPreserveScrollPosition(visit) {\n    return this.isPageRefresh(visit) && this.snapshot.shouldPreserveScrollPosition\n  }\n\n  get snapshot() {\n    return PageSnapshot.fromElement(this.element)\n  }\n}\n\nclass Preloader {\n  selector = \"a[data-turbo-preload]\"\n\n  constructor(delegate, snapshotCache) {\n    this.delegate = delegate;\n    this.snapshotCache = snapshotCache;\n  }\n\n  start() {\n    if (document.readyState === \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", this.#preloadAll);\n    } else {\n      this.preloadOnLoadLinksForView(document.body);\n    }\n  }\n\n  stop() {\n    document.removeEventListener(\"DOMContentLoaded\", this.#preloadAll);\n  }\n\n  preloadOnLoadLinksForView(element) {\n    for (const link of element.querySelectorAll(this.selector)) {\n      if (this.delegate.shouldPreloadLink(link)) {\n        this.preloadURL(link);\n      }\n    }\n  }\n\n  async preloadURL(link) {\n    const location = new URL(link.href);\n\n    if (this.snapshotCache.has(location)) {\n      return\n    }\n\n    const fetchRequest = new FetchRequest(this, FetchMethod.get, location, new URLSearchParams(), link);\n    await fetchRequest.perform();\n  }\n\n  // Fetch request delegate\n\n  prepareRequest(fetchRequest) {\n    fetchRequest.headers[\"X-Sec-Purpose\"] = \"prefetch\";\n  }\n\n  async requestSucceededWithResponse(fetchRequest, fetchResponse) {\n    try {\n      const responseHTML = await fetchResponse.responseHTML;\n      const snapshot = PageSnapshot.fromHTMLString(responseHTML);\n\n      this.snapshotCache.put(fetchRequest.url, snapshot);\n    } catch (_) {\n      // If we cannot preload that is ok!\n    }\n  }\n\n  requestStarted(fetchRequest) {}\n\n  requestErrored(fetchRequest) {}\n\n  requestFinished(fetchRequest) {}\n\n  requestPreventedHandlingResponse(fetchRequest, fetchResponse) {}\n\n  requestFailedWithResponse(fetchRequest, fetchResponse) {}\n\n  #preloadAll = () => {\n    this.preloadOnLoadLinksForView(document.body);\n  }\n}\n\nclass Cache {\n  constructor(session) {\n    this.session = session;\n  }\n\n  clear() {\n    this.session.clearCache();\n  }\n\n  resetCacheControl() {\n    this.#setCacheControl(\"\");\n  }\n\n  exemptPageFromCache() {\n    this.#setCacheControl(\"no-cache\");\n  }\n\n  exemptPageFromPreview() {\n    this.#setCacheControl(\"no-preview\");\n  }\n\n  #setCacheControl(value) {\n    setMetaContent(\"turbo-cache-control\", value);\n  }\n}\n\nclass Session {\n  navigator = new Navigator(this)\n  history = new History(this)\n  view = new PageView(this, document.documentElement)\n  adapter = new BrowserAdapter(this)\n\n  pageObserver = new PageObserver(this)\n  cacheObserver = new CacheObserver()\n  linkPrefetchObserver = new LinkPrefetchObserver(this, document)\n  linkClickObserver = new LinkClickObserver(this, window)\n  formSubmitObserver = new FormSubmitObserver(this, document)\n  scrollObserver = new ScrollObserver(this)\n  streamObserver = new StreamObserver(this)\n  formLinkClickObserver = new FormLinkClickObserver(this, document.documentElement)\n  frameRedirector = new FrameRedirector(this, document.documentElement)\n  streamMessageRenderer = new StreamMessageRenderer()\n  cache = new Cache(this)\n\n  drive = true\n  enabled = true\n  progressBarDelay = 500\n  started = false\n  formMode = \"on\"\n  #pageRefreshDebouncePeriod = 150\n\n  constructor(recentRequests) {\n    this.recentRequests = recentRequests;\n    this.preloader = new Preloader(this, this.view.snapshotCache);\n    this.debouncedRefresh = this.refresh;\n    this.pageRefreshDebouncePeriod = this.pageRefreshDebouncePeriod;\n  }\n\n  start() {\n    if (!this.started) {\n      this.pageObserver.start();\n      this.cacheObserver.start();\n      this.linkPrefetchObserver.start();\n      this.formLinkClickObserver.start();\n      this.linkClickObserver.start();\n      this.formSubmitObserver.start();\n      this.scrollObserver.start();\n      this.streamObserver.start();\n      this.frameRedirector.start();\n      this.history.start();\n      this.preloader.start();\n      this.started = true;\n      this.enabled = true;\n    }\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n  stop() {\n    if (this.started) {\n      this.pageObserver.stop();\n      this.cacheObserver.stop();\n      this.linkPrefetchObserver.stop();\n      this.formLinkClickObserver.stop();\n      this.linkClickObserver.stop();\n      this.formSubmitObserver.stop();\n      this.scrollObserver.stop();\n      this.streamObserver.stop();\n      this.frameRedirector.stop();\n      this.history.stop();\n      this.preloader.stop();\n      this.started = false;\n    }\n  }\n\n  registerAdapter(adapter) {\n    this.adapter = adapter;\n  }\n\n  visit(location, options = {}) {\n    const frameElement = options.frame ? document.getElementById(options.frame) : null;\n\n    if (frameElement instanceof FrameElement) {\n      const action = options.action || getVisitAction(frameElement);\n\n      frameElement.delegate.proposeVisitIfNavigatedWithAction(frameElement, action);\n      frameElement.src = location.toString();\n    } else {\n      this.navigator.proposeVisit(expandURL(location), options);\n    }\n  }\n\n  refresh(url, requestId) {\n    const isRecentRequest = requestId && this.recentRequests.has(requestId);\n    if (!isRecentRequest) {\n      this.cache.exemptPageFromPreview();\n      this.visit(url, { action: \"replace\" });\n    }\n  }\n\n  connectStreamSource(source) {\n    this.streamObserver.connectStreamSource(source);\n  }\n\n  disconnectStreamSource(source) {\n    this.streamObserver.disconnectStreamSource(source);\n  }\n\n  renderStreamMessage(message) {\n    this.streamMessageRenderer.render(StreamMessage.wrap(message));\n  }\n\n  clearCache() {\n    this.view.clearSnapshotCache();\n  }\n\n  setProgressBarDelay(delay) {\n    this.progressBarDelay = delay;\n  }\n\n  setFormMode(mode) {\n    this.formMode = mode;\n  }\n\n  get location() {\n    return this.history.location\n  }\n\n  get restorationIdentifier() {\n    return this.history.restorationIdentifier\n  }\n\n  get pageRefreshDebouncePeriod() {\n    return this.#pageRefreshDebouncePeriod\n  }\n\n  set pageRefreshDebouncePeriod(value) {\n    this.refresh = debounce(this.debouncedRefresh.bind(this), value);\n    this.#pageRefreshDebouncePeriod = value;\n  }\n\n  // Preloader delegate\n\n  shouldPreloadLink(element) {\n    const isUnsafe = element.hasAttribute(\"data-turbo-method\");\n    const isStream = element.hasAttribute(\"data-turbo-stream\");\n    const frameTarget = element.getAttribute(\"data-turbo-frame\");\n    const frame = frameTarget == \"_top\" ?\n      null :\n      document.getElementById(frameTarget) || findClosestRecursively(element, \"turbo-frame:not([disabled])\");\n\n    if (isUnsafe || isStream || frame instanceof FrameElement) {\n      return false\n    } else {\n      const location = new URL(element.href);\n\n      return this.elementIsNavigatable(element) && locationIsVisitable(location, this.snapshot.rootLocation)\n    }\n  }\n\n  // History delegate\n\n  historyPoppedToLocationWithRestorationIdentifierAndDirection(location, restorationIdentifier, direction) {\n    if (this.enabled) {\n      this.navigator.startVisit(location, restorationIdentifier, {\n        action: \"restore\",\n        historyChanged: true,\n        direction\n      });\n    } else {\n      this.adapter.pageInvalidated({\n        reason: \"turbo_disabled\"\n      });\n    }\n  }\n\n  // Scroll observer delegate\n\n  scrollPositionChanged(position) {\n    this.history.updateRestorationData({ scrollPosition: position });\n  }\n\n  // Form click observer delegate\n\n  willSubmitFormLinkToLocation(link, location) {\n    return this.elementIsNavigatable(link) && locationIsVisitable(location, this.snapshot.rootLocation)\n  }\n\n  submittedFormLinkToLocation() {}\n\n  // Link hover observer delegate\n\n  canPrefetchRequestToLocation(link, location) {\n    return (\n      this.elementIsNavigatable(link) &&\n        locationIsVisitable(location, this.snapshot.rootLocation)\n    )\n  }\n\n  // Link click observer delegate\n\n  willFollowLinkToLocation(link, location, event) {\n    return (\n      this.elementIsNavigatable(link) &&\n      locationIsVisitable(location, this.snapshot.rootLocation) &&\n      this.applicationAllowsFollowingLinkToLocation(link, location, event)\n    )\n  }\n\n  followedLinkToLocation(link, location) {\n    const action = this.getActionForLink(link);\n    const acceptsStreamResponse = link.hasAttribute(\"data-turbo-stream\");\n\n    this.visit(location.href, { action, acceptsStreamResponse });\n  }\n\n  // Navigator delegate\n\n  allowsVisitingLocationWithAction(location, action) {\n    return this.locationWithActionIsSamePage(location, action) || this.applicationAllowsVisitingLocation(location)\n  }\n\n  visitProposedToLocation(location, options) {\n    extendURLWithDeprecatedProperties(location);\n    this.adapter.visitProposedToLocation(location, options);\n  }\n\n  // Visit delegate\n\n  visitStarted(visit) {\n    if (!visit.acceptsStreamResponse) {\n      markAsBusy(document.documentElement);\n      this.view.markVisitDirection(visit.direction);\n    }\n    extendURLWithDeprecatedProperties(visit.location);\n    if (!visit.silent) {\n      this.notifyApplicationAfterVisitingLocation(visit.location, visit.action);\n    }\n  }\n\n  visitCompleted(visit) {\n    this.view.unmarkVisitDirection();\n    clearBusyState(document.documentElement);\n    this.notifyApplicationAfterPageLoad(visit.getTimingMetrics());\n  }\n\n  locationWithActionIsSamePage(location, action) {\n    return this.navigator.locationWithActionIsSamePage(location, action)\n  }\n\n  visitScrolledToSamePageLocation(oldURL, newURL) {\n    this.notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL);\n  }\n\n  // Form submit observer delegate\n\n  willSubmitForm(form, submitter) {\n    const action = getAction$1(form, submitter);\n\n    return (\n      this.submissionIsNavigatable(form, submitter) &&\n      locationIsVisitable(expandURL(action), this.snapshot.rootLocation)\n    )\n  }\n\n  formSubmitted(form, submitter) {\n    this.navigator.submitForm(form, submitter);\n  }\n\n  // Page observer delegate\n\n  pageBecameInteractive() {\n    this.view.lastRenderedLocation = this.location;\n    this.notifyApplicationAfterPageLoad();\n  }\n\n  pageLoaded() {\n    this.history.assumeControlOfScrollRestoration();\n  }\n\n  pageWillUnload() {\n    this.history.relinquishControlOfScrollRestoration();\n  }\n\n  // Stream observer delegate\n\n  receivedMessageFromStream(message) {\n    this.renderStreamMessage(message);\n  }\n\n  // Page view delegate\n\n  viewWillCacheSnapshot() {\n    if (!this.navigator.currentVisit?.silent) {\n      this.notifyApplicationBeforeCachingSnapshot();\n    }\n  }\n\n  allowsImmediateRender({ element }, options) {\n    const event = this.notifyApplicationBeforeRender(element, options);\n    const {\n      defaultPrevented,\n      detail: { render }\n    } = event;\n\n    if (this.view.renderer && render) {\n      this.view.renderer.renderElement = render;\n    }\n\n    return !defaultPrevented\n  }\n\n  viewRenderedSnapshot(_snapshot, _isPreview, renderMethod) {\n    this.view.lastRenderedLocation = this.history.location;\n    this.notifyApplicationAfterRender(renderMethod);\n  }\n\n  preloadOnLoadLinksForView(element) {\n    this.preloader.preloadOnLoadLinksForView(element);\n  }\n\n  viewInvalidated(reason) {\n    this.adapter.pageInvalidated(reason);\n  }\n\n  // Frame element\n\n  frameLoaded(frame) {\n    this.notifyApplicationAfterFrameLoad(frame);\n  }\n\n  frameRendered(fetchResponse, frame) {\n    this.notifyApplicationAfterFrameRender(fetchResponse, frame);\n  }\n\n  // Application events\n\n  applicationAllowsFollowingLinkToLocation(link, location, ev) {\n    const event = this.notifyApplicationAfterClickingLinkToLocation(link, location, ev);\n    return !event.defaultPrevented\n  }\n\n  applicationAllowsVisitingLocation(location) {\n    const event = this.notifyApplicationBeforeVisitingLocation(location);\n    return !event.defaultPrevented\n  }\n\n  notifyApplicationAfterClickingLinkToLocation(link, location, event) {\n    return dispatch(\"turbo:click\", {\n      target: link,\n      detail: { url: location.href, originalEvent: event },\n      cancelable: true\n    })\n  }\n\n  notifyApplicationBeforeVisitingLocation(location) {\n    return dispatch(\"turbo:before-visit\", {\n      detail: { url: location.href },\n      cancelable: true\n    })\n  }\n\n  notifyApplicationAfterVisitingLocation(location, action) {\n    return dispatch(\"turbo:visit\", { detail: { url: location.href, action } })\n  }\n\n  notifyApplicationBeforeCachingSnapshot() {\n    return dispatch(\"turbo:before-cache\")\n  }\n\n  notifyApplicationBeforeRender(newBody, options) {\n    return dispatch(\"turbo:before-render\", {\n      detail: { newBody, ...options },\n      cancelable: true\n    })\n  }\n\n  notifyApplicationAfterRender(renderMethod) {\n    return dispatch(\"turbo:render\", { detail: { renderMethod } })\n  }\n\n  notifyApplicationAfterPageLoad(timing = {}) {\n    return dispatch(\"turbo:load\", {\n      detail: { url: this.location.href, timing }\n    })\n  }\n\n  notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL) {\n    dispatchEvent(\n      new HashChangeEvent(\"hashchange\", {\n        oldURL: oldURL.toString(),\n        newURL: newURL.toString()\n      })\n    );\n  }\n\n  notifyApplicationAfterFrameLoad(frame) {\n    return dispatch(\"turbo:frame-load\", { target: frame })\n  }\n\n  notifyApplicationAfterFrameRender(fetchResponse, frame) {\n    return dispatch(\"turbo:frame-render\", {\n      detail: { fetchResponse },\n      target: frame,\n      cancelable: true\n    })\n  }\n\n  // Helpers\n\n  submissionIsNavigatable(form, submitter) {\n    if (this.formMode == \"off\") {\n      return false\n    } else {\n      const submitterIsNavigatable = submitter ? this.elementIsNavigatable(submitter) : true;\n\n      if (this.formMode == \"optin\") {\n        return submitterIsNavigatable && form.closest('[data-turbo=\"true\"]') != null\n      } else {\n        return submitterIsNavigatable && this.elementIsNavigatable(form)\n      }\n    }\n  }\n\n  elementIsNavigatable(element) {\n    const container = findClosestRecursively(element, \"[data-turbo]\");\n    const withinFrame = findClosestRecursively(element, \"turbo-frame\");\n\n    // Check if Drive is enabled on the session or we're within a Frame.\n    if (this.drive || withinFrame) {\n      // Element is navigatable by default, unless `data-turbo=\"false\"`.\n      if (container) {\n        return container.getAttribute(\"data-turbo\") != \"false\"\n      } else {\n        return true\n      }\n    } else {\n      // Element isn't navigatable by default, unless `data-turbo=\"true\"`.\n      if (container) {\n        return container.getAttribute(\"data-turbo\") == \"true\"\n      } else {\n        return false\n      }\n    }\n  }\n\n  // Private\n\n  getActionForLink(link) {\n    return getVisitAction(link) || \"advance\"\n  }\n\n  get snapshot() {\n    return this.view.snapshot\n  }\n}\n\n// Older versions of the Turbo Native adapters referenced the\n// `Location#absoluteURL` property in their implementations of\n// the `Adapter#visitProposedToLocation()` and `#visitStarted()`\n// methods. The Location class has since been removed in favor\n// of the DOM URL API, and accordingly all Adapter methods now\n// receive URL objects.\n//\n// We alias #absoluteURL to #toString() here to avoid crashing\n// older adapters which do not expect URL objects. We should\n// consider removing this support at some point in the future.\n\nfunction extendURLWithDeprecatedProperties(url) {\n  Object.defineProperties(url, deprecatedLocationPropertyDescriptors);\n}\n\nconst deprecatedLocationPropertyDescriptors = {\n  absoluteURL: {\n    get() {\n      return this.toString()\n    }\n  }\n};\n\nconst session = new Session(recentRequests);\nconst { cache, navigator: navigator$1 } = session;\n\n/**\n * Starts the main session.\n * This initialises any necessary observers such as those to monitor\n * link interactions.\n */\nfunction start() {\n  session.start();\n}\n\n/**\n * Registers an adapter for the main session.\n *\n * @param adapter Adapter to register\n */\nfunction registerAdapter(adapter) {\n  session.registerAdapter(adapter);\n}\n\n/**\n * Performs an application visit to the given location.\n *\n * @param location Location to visit (a URL or path)\n * @param options Options to apply\n * @param options.action Type of history navigation to apply (\"restore\",\n * \"replace\" or \"advance\")\n * @param options.historyChanged Specifies whether the browser history has\n * already been changed for this visit or not\n * @param options.referrer Specifies the referrer of this visit such that\n * navigations to the same page will not result in a new history entry.\n * @param options.snapshotHTML Cached snapshot to render\n * @param options.response Response of the specified location\n */\nfunction visit(location, options) {\n  session.visit(location, options);\n}\n\n/**\n * Connects a stream source to the main session.\n *\n * @param source Stream source to connect\n */\nfunction connectStreamSource(source) {\n  session.connectStreamSource(source);\n}\n\n/**\n * Disconnects a stream source from the main session.\n *\n * @param source Stream source to disconnect\n */\nfunction disconnectStreamSource(source) {\n  session.disconnectStreamSource(source);\n}\n\n/**\n * Renders a stream message to the main session by appending it to the\n * current document.\n *\n * @param message Message to render\n */\nfunction renderStreamMessage(message) {\n  session.renderStreamMessage(message);\n}\n\n/**\n * Removes all entries from the Turbo Drive page cache.\n * Call this when state has changed on the server that may affect cached pages.\n *\n * @deprecated since version 7.2.0 in favor of `Turbo.cache.clear()`\n */\nfunction clearCache() {\n  console.warn(\n    \"Please replace `Turbo.clearCache()` with `Turbo.cache.clear()`. The top-level function is deprecated and will be removed in a future version of Turbo.`\"\n  );\n  session.clearCache();\n}\n\n/**\n * Sets the delay after which the progress bar will appear during navigation.\n *\n * The progress bar appears after 500ms by default.\n *\n * Note that this method has no effect when used with the iOS or Android\n * adapters.\n *\n * @param delay Time to delay in milliseconds\n */\nfunction setProgressBarDelay(delay) {\n  session.setProgressBarDelay(delay);\n}\n\nfunction setConfirmMethod(confirmMethod) {\n  FormSubmission.confirmMethod = confirmMethod;\n}\n\nfunction setFormMode(mode) {\n  session.setFormMode(mode);\n}\n\nvar Turbo = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  navigator: navigator$1,\n  session: session,\n  cache: cache,\n  PageRenderer: PageRenderer,\n  PageSnapshot: PageSnapshot,\n  FrameRenderer: FrameRenderer,\n  fetch: fetchWithTurboHeaders,\n  start: start,\n  registerAdapter: registerAdapter,\n  visit: visit,\n  connectStreamSource: connectStreamSource,\n  disconnectStreamSource: disconnectStreamSource,\n  renderStreamMessage: renderStreamMessage,\n  clearCache: clearCache,\n  setProgressBarDelay: setProgressBarDelay,\n  setConfirmMethod: setConfirmMethod,\n  setFormMode: setFormMode\n});\n\nclass TurboFrameMissingError extends Error {}\n\nclass FrameController {\n  fetchResponseLoaded = (_fetchResponse) => Promise.resolve()\n  #currentFetchRequest = null\n  #resolveVisitPromise = () => {}\n  #connected = false\n  #hasBeenLoaded = false\n  #ignoredAttributes = new Set()\n  action = null\n\n  constructor(element) {\n    this.element = element;\n    this.view = new FrameView(this, this.element);\n    this.appearanceObserver = new AppearanceObserver(this, this.element);\n    this.formLinkClickObserver = new FormLinkClickObserver(this, this.element);\n    this.linkInterceptor = new LinkInterceptor(this, this.element);\n    this.restorationIdentifier = uuid();\n    this.formSubmitObserver = new FormSubmitObserver(this, this.element);\n  }\n\n  // Frame delegate\n\n  connect() {\n    if (!this.#connected) {\n      this.#connected = true;\n      if (this.loadingStyle == FrameLoadingStyle.lazy) {\n        this.appearanceObserver.start();\n      } else {\n        this.#loadSourceURL();\n      }\n      this.formLinkClickObserver.start();\n      this.linkInterceptor.start();\n      this.formSubmitObserver.start();\n    }\n  }\n\n  disconnect() {\n    if (this.#connected) {\n      this.#connected = false;\n      this.appearanceObserver.stop();\n      this.formLinkClickObserver.stop();\n      this.linkInterceptor.stop();\n      this.formSubmitObserver.stop();\n    }\n  }\n\n  disabledChanged() {\n    if (this.loadingStyle == FrameLoadingStyle.eager) {\n      this.#loadSourceURL();\n    }\n  }\n\n  sourceURLChanged() {\n    if (this.#isIgnoringChangesTo(\"src\")) return\n\n    if (this.element.isConnected) {\n      this.complete = false;\n    }\n\n    if (this.loadingStyle == FrameLoadingStyle.eager || this.#hasBeenLoaded) {\n      this.#loadSourceURL();\n    }\n  }\n\n  sourceURLReloaded() {\n    const { src } = this.element;\n    this.#ignoringChangesToAttribute(\"complete\", () => {\n      this.element.removeAttribute(\"complete\");\n    });\n    this.element.src = null;\n    this.element.src = src;\n    return this.element.loaded\n  }\n\n  completeChanged() {\n    if (this.#isIgnoringChangesTo(\"complete\")) return\n\n    this.#loadSourceURL();\n  }\n\n  loadingStyleChanged() {\n    if (this.loadingStyle == FrameLoadingStyle.lazy) {\n      this.appearanceObserver.start();\n    } else {\n      this.appearanceObserver.stop();\n      this.#loadSourceURL();\n    }\n  }\n\n  async #loadSourceURL() {\n    if (this.enabled && this.isActive && !this.complete && this.sourceURL) {\n      this.element.loaded = this.#visit(expandURL(this.sourceURL));\n      this.appearanceObserver.stop();\n      await this.element.loaded;\n      this.#hasBeenLoaded = true;\n    }\n  }\n\n  async loadResponse(fetchResponse) {\n    if (fetchResponse.redirected || (fetchResponse.succeeded && fetchResponse.isHTML)) {\n      this.sourceURL = fetchResponse.response.url;\n    }\n\n    try {\n      const html = await fetchResponse.responseHTML;\n      if (html) {\n        const document = parseHTMLDocument(html);\n        const pageSnapshot = PageSnapshot.fromDocument(document);\n\n        if (pageSnapshot.isVisitable) {\n          await this.#loadFrameResponse(fetchResponse, document);\n        } else {\n          await this.#handleUnvisitableFrameResponse(fetchResponse);\n        }\n      }\n    } finally {\n      this.fetchResponseLoaded = () => Promise.resolve();\n    }\n  }\n\n  // Appearance observer delegate\n\n  elementAppearedInViewport(element) {\n    this.proposeVisitIfNavigatedWithAction(element, getVisitAction(element));\n    this.#loadSourceURL();\n  }\n\n  // Form link click observer delegate\n\n  willSubmitFormLinkToLocation(link) {\n    return this.#shouldInterceptNavigation(link)\n  }\n\n  submittedFormLinkToLocation(link, _location, form) {\n    const frame = this.#findFrameElement(link);\n    if (frame) form.setAttribute(\"data-turbo-frame\", frame.id);\n  }\n\n  // Link interceptor delegate\n\n  shouldInterceptLinkClick(element, _location, _event) {\n    return this.#shouldInterceptNavigation(element)\n  }\n\n  linkClickIntercepted(element, location) {\n    this.#navigateFrame(element, location);\n  }\n\n  // Form submit observer delegate\n\n  willSubmitForm(element, submitter) {\n    return element.closest(\"turbo-frame\") == this.element && this.#shouldInterceptNavigation(element, submitter)\n  }\n\n  formSubmitted(element, submitter) {\n    if (this.formSubmission) {\n      this.formSubmission.stop();\n    }\n\n    this.formSubmission = new FormSubmission(this, element, submitter);\n    const { fetchRequest } = this.formSubmission;\n    this.prepareRequest(fetchRequest);\n    this.formSubmission.start();\n  }\n\n  // Fetch request delegate\n\n  prepareRequest(request) {\n    request.headers[\"Turbo-Frame\"] = this.id;\n\n    if (this.currentNavigationElement?.hasAttribute(\"data-turbo-stream\")) {\n      request.acceptResponseType(StreamMessage.contentType);\n    }\n  }\n\n  requestStarted(_request) {\n    markAsBusy(this.element);\n  }\n\n  requestPreventedHandlingResponse(_request, _response) {\n    this.#resolveVisitPromise();\n  }\n\n  async requestSucceededWithResponse(request, response) {\n    await this.loadResponse(response);\n    this.#resolveVisitPromise();\n  }\n\n  async requestFailedWithResponse(request, response) {\n    await this.loadResponse(response);\n    this.#resolveVisitPromise();\n  }\n\n  requestErrored(request, error) {\n    console.error(error);\n    this.#resolveVisitPromise();\n  }\n\n  requestFinished(_request) {\n    clearBusyState(this.element);\n  }\n\n  // Form submission delegate\n\n  formSubmissionStarted({ formElement }) {\n    markAsBusy(formElement, this.#findFrameElement(formElement));\n  }\n\n  formSubmissionSucceededWithResponse(formSubmission, response) {\n    const frame = this.#findFrameElement(formSubmission.formElement, formSubmission.submitter);\n\n    frame.delegate.proposeVisitIfNavigatedWithAction(frame, getVisitAction(formSubmission.submitter, formSubmission.formElement, frame));\n    frame.delegate.loadResponse(response);\n\n    if (!formSubmission.isSafe) {\n      session.clearCache();\n    }\n  }\n\n  formSubmissionFailedWithResponse(formSubmission, fetchResponse) {\n    this.element.delegate.loadResponse(fetchResponse);\n    session.clearCache();\n  }\n\n  formSubmissionErrored(formSubmission, error) {\n    console.error(error);\n  }\n\n  formSubmissionFinished({ formElement }) {\n    clearBusyState(formElement, this.#findFrameElement(formElement));\n  }\n\n  // View delegate\n\n  allowsImmediateRender({ element: newFrame }, options) {\n    const event = dispatch(\"turbo:before-frame-render\", {\n      target: this.element,\n      detail: { newFrame, ...options },\n      cancelable: true\n    });\n    const {\n      defaultPrevented,\n      detail: { render }\n    } = event;\n\n    if (this.view.renderer && render) {\n      this.view.renderer.renderElement = render;\n    }\n\n    return !defaultPrevented\n  }\n\n  viewRenderedSnapshot(_snapshot, _isPreview, _renderMethod) {}\n\n  preloadOnLoadLinksForView(element) {\n    session.preloadOnLoadLinksForView(element);\n  }\n\n  viewInvalidated() {}\n\n  // Frame renderer delegate\n\n  willRenderFrame(currentElement, _newElement) {\n    this.previousFrameElement = currentElement.cloneNode(true);\n  }\n\n  visitCachedSnapshot = ({ element }) => {\n    const frame = element.querySelector(\"#\" + this.element.id);\n\n    if (frame && this.previousFrameElement) {\n      frame.replaceChildren(...this.previousFrameElement.children);\n    }\n\n    delete this.previousFrameElement;\n  }\n\n  // Private\n\n  async #loadFrameResponse(fetchResponse, document) {\n    const newFrameElement = await this.extractForeignFrameElement(document.body);\n\n    if (newFrameElement) {\n      const snapshot = new Snapshot(newFrameElement);\n      const renderer = new FrameRenderer(this, this.view.snapshot, snapshot, FrameRenderer.renderElement, false, false);\n      if (this.view.renderPromise) await this.view.renderPromise;\n      this.changeHistory();\n\n      await this.view.render(renderer);\n      this.complete = true;\n      session.frameRendered(fetchResponse, this.element);\n      session.frameLoaded(this.element);\n      await this.fetchResponseLoaded(fetchResponse);\n    } else if (this.#willHandleFrameMissingFromResponse(fetchResponse)) {\n      this.#handleFrameMissingFromResponse(fetchResponse);\n    }\n  }\n\n  async #visit(url) {\n    const request = new FetchRequest(this, FetchMethod.get, url, new URLSearchParams(), this.element);\n\n    this.#currentFetchRequest?.cancel();\n    this.#currentFetchRequest = request;\n\n    return new Promise((resolve) => {\n      this.#resolveVisitPromise = () => {\n        this.#resolveVisitPromise = () => {};\n        this.#currentFetchRequest = null;\n        resolve();\n      };\n      request.perform();\n    })\n  }\n\n  #navigateFrame(element, url, submitter) {\n    const frame = this.#findFrameElement(element, submitter);\n\n    frame.delegate.proposeVisitIfNavigatedWithAction(frame, getVisitAction(submitter, element, frame));\n\n    this.#withCurrentNavigationElement(element, () => {\n      frame.src = url;\n    });\n  }\n\n  proposeVisitIfNavigatedWithAction(frame, action = null) {\n    this.action = action;\n\n    if (this.action) {\n      const pageSnapshot = PageSnapshot.fromElement(frame).clone();\n      const { visitCachedSnapshot } = frame.delegate;\n\n      frame.delegate.fetchResponseLoaded = async (fetchResponse) => {\n        if (frame.src) {\n          const { statusCode, redirected } = fetchResponse;\n          const responseHTML = await fetchResponse.responseHTML;\n          const response = { statusCode, redirected, responseHTML };\n          const options = {\n            response,\n            visitCachedSnapshot,\n            willRender: false,\n            updateHistory: false,\n            restorationIdentifier: this.restorationIdentifier,\n            snapshot: pageSnapshot\n          };\n\n          if (this.action) options.action = this.action;\n\n          session.visit(frame.src, options);\n        }\n      };\n    }\n  }\n\n  changeHistory() {\n    if (this.action) {\n      const method = getHistoryMethodForAction(this.action);\n      session.history.update(method, expandURL(this.element.src || \"\"), this.restorationIdentifier);\n    }\n  }\n\n  async #handleUnvisitableFrameResponse(fetchResponse) {\n    console.warn(\n      `The response (${fetchResponse.statusCode}) from <turbo-frame id=\"${this.element.id}\"> is performing a full page visit due to turbo-visit-control.`\n    );\n\n    await this.#visitResponse(fetchResponse.response);\n  }\n\n  #willHandleFrameMissingFromResponse(fetchResponse) {\n    this.element.setAttribute(\"complete\", \"\");\n\n    const response = fetchResponse.response;\n    const visit = async (url, options) => {\n      if (url instanceof Response) {\n        this.#visitResponse(url);\n      } else {\n        session.visit(url, options);\n      }\n    };\n\n    const event = dispatch(\"turbo:frame-missing\", {\n      target: this.element,\n      detail: { response, visit },\n      cancelable: true\n    });\n\n    return !event.defaultPrevented\n  }\n\n  #handleFrameMissingFromResponse(fetchResponse) {\n    this.view.missing();\n    this.#throwFrameMissingError(fetchResponse);\n  }\n\n  #throwFrameMissingError(fetchResponse) {\n    const message = `The response (${fetchResponse.statusCode}) did not contain the expected <turbo-frame id=\"${this.element.id}\"> and will be ignored. To perform a full page visit instead, set turbo-visit-control to reload.`;\n    throw new TurboFrameMissingError(message)\n  }\n\n  async #visitResponse(response) {\n    const wrapped = new FetchResponse(response);\n    const responseHTML = await wrapped.responseHTML;\n    const { location, redirected, statusCode } = wrapped;\n\n    return session.visit(location, { response: { redirected, statusCode, responseHTML } })\n  }\n\n  #findFrameElement(element, submitter) {\n    const id = getAttribute(\"data-turbo-frame\", submitter, element) || this.element.getAttribute(\"target\");\n    return getFrameElementById(id) ?? this.element\n  }\n\n  async extractForeignFrameElement(container) {\n    let element;\n    const id = CSS.escape(this.id);\n\n    try {\n      element = activateElement(container.querySelector(`turbo-frame#${id}`), this.sourceURL);\n      if (element) {\n        return element\n      }\n\n      element = activateElement(container.querySelector(`turbo-frame[src][recurse~=${id}]`), this.sourceURL);\n      if (element) {\n        await element.loaded;\n        return await this.extractForeignFrameElement(element)\n      }\n    } catch (error) {\n      console.error(error);\n      return new FrameElement()\n    }\n\n    return null\n  }\n\n  #formActionIsVisitable(form, submitter) {\n    const action = getAction$1(form, submitter);\n\n    return locationIsVisitable(expandURL(action), this.rootLocation)\n  }\n\n  #shouldInterceptNavigation(element, submitter) {\n    const id = getAttribute(\"data-turbo-frame\", submitter, element) || this.element.getAttribute(\"target\");\n\n    if (element instanceof HTMLFormElement && !this.#formActionIsVisitable(element, submitter)) {\n      return false\n    }\n\n    if (!this.enabled || id == \"_top\") {\n      return false\n    }\n\n    if (id) {\n      const frameElement = getFrameElementById(id);\n      if (frameElement) {\n        return !frameElement.disabled\n      }\n    }\n\n    if (!session.elementIsNavigatable(element)) {\n      return false\n    }\n\n    if (submitter && !session.elementIsNavigatable(submitter)) {\n      return false\n    }\n\n    return true\n  }\n\n  // Computed properties\n\n  get id() {\n    return this.element.id\n  }\n\n  get enabled() {\n    return !this.element.disabled\n  }\n\n  get sourceURL() {\n    if (this.element.src) {\n      return this.element.src\n    }\n  }\n\n  set sourceURL(sourceURL) {\n    this.#ignoringChangesToAttribute(\"src\", () => {\n      this.element.src = sourceURL ?? null;\n    });\n  }\n\n  get loadingStyle() {\n    return this.element.loading\n  }\n\n  get isLoading() {\n    return this.formSubmission !== undefined || this.#resolveVisitPromise() !== undefined\n  }\n\n  get complete() {\n    return this.element.hasAttribute(\"complete\")\n  }\n\n  set complete(value) {\n    this.#ignoringChangesToAttribute(\"complete\", () => {\n      if (value) {\n        this.element.setAttribute(\"complete\", \"\");\n      } else {\n        this.element.removeAttribute(\"complete\");\n      }\n    });\n  }\n\n  get isActive() {\n    return this.element.isActive && this.#connected\n  }\n\n  get rootLocation() {\n    const meta = this.element.ownerDocument.querySelector(`meta[name=\"turbo-root\"]`);\n    const root = meta?.content ?? \"/\";\n    return expandURL(root)\n  }\n\n  #isIgnoringChangesTo(attributeName) {\n    return this.#ignoredAttributes.has(attributeName)\n  }\n\n  #ignoringChangesToAttribute(attributeName, callback) {\n    this.#ignoredAttributes.add(attributeName);\n    callback();\n    this.#ignoredAttributes.delete(attributeName);\n  }\n\n  #withCurrentNavigationElement(element, callback) {\n    this.currentNavigationElement = element;\n    callback();\n    delete this.currentNavigationElement;\n  }\n}\n\nfunction getFrameElementById(id) {\n  if (id != null) {\n    const element = document.getElementById(id);\n    if (element instanceof FrameElement) {\n      return element\n    }\n  }\n}\n\nfunction activateElement(element, currentURL) {\n  if (element) {\n    const src = element.getAttribute(\"src\");\n    if (src != null && currentURL != null && urlsAreEqual(src, currentURL)) {\n      throw new Error(`Matching <turbo-frame id=\"${element.id}\"> element has a source URL which references itself`)\n    }\n    if (element.ownerDocument !== document) {\n      element = document.importNode(element, true);\n    }\n\n    if (element instanceof FrameElement) {\n      element.connectedCallback();\n      element.disconnectedCallback();\n      return element\n    }\n  }\n}\n\nconst StreamActions = {\n  after() {\n    this.targetElements.forEach((e) => e.parentElement?.insertBefore(this.templateContent, e.nextSibling));\n  },\n\n  append() {\n    this.removeDuplicateTargetChildren();\n    this.targetElements.forEach((e) => e.append(this.templateContent));\n  },\n\n  before() {\n    this.targetElements.forEach((e) => e.parentElement?.insertBefore(this.templateContent, e));\n  },\n\n  prepend() {\n    this.removeDuplicateTargetChildren();\n    this.targetElements.forEach((e) => e.prepend(this.templateContent));\n  },\n\n  remove() {\n    this.targetElements.forEach((e) => e.remove());\n  },\n\n  replace() {\n    this.targetElements.forEach((e) => e.replaceWith(this.templateContent));\n  },\n\n  update() {\n    this.targetElements.forEach((targetElement) => {\n      targetElement.innerHTML = \"\";\n      targetElement.append(this.templateContent);\n    });\n  },\n\n  refresh() {\n    session.refresh(this.baseURI, this.requestId);\n  }\n};\n\n// <turbo-stream action=replace target=id><template>...\n\n/**\n * Renders updates to the page from a stream of messages.\n *\n * Using the `action` attribute, this can be configured one of four ways:\n *\n * - `append` - appends the result to the container\n * - `prepend` - prepends the result to the container\n * - `replace` - replaces the contents of the container\n * - `remove` - removes the container\n * - `before` - inserts the result before the target\n * - `after` - inserts the result after the target\n *\n * @customElement turbo-stream\n * @example\n *   <turbo-stream action=\"append\" target=\"dom_id\">\n *     <template>\n *       Content to append to container designated with the dom_id.\n *     </template>\n *   </turbo-stream>\n */\nclass StreamElement extends HTMLElement {\n  static async renderElement(newElement) {\n    await newElement.performAction();\n  }\n\n  async connectedCallback() {\n    try {\n      await this.render();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.disconnect();\n    }\n  }\n\n  async render() {\n    return (this.renderPromise ??= (async () => {\n      const event = this.beforeRenderEvent;\n\n      if (this.dispatchEvent(event)) {\n        await nextRepaint();\n        await event.detail.render(this);\n      }\n    })())\n  }\n\n  disconnect() {\n    try {\n      this.remove();\n      // eslint-disable-next-line no-empty\n    } catch {}\n  }\n\n  /**\n   * Removes duplicate children (by ID)\n   */\n  removeDuplicateTargetChildren() {\n    this.duplicateChildren.forEach((c) => c.remove());\n  }\n\n  /**\n   * Gets the list of duplicate children (i.e. those with the same ID)\n   */\n  get duplicateChildren() {\n    const existingChildren = this.targetElements.flatMap((e) => [...e.children]).filter((c) => !!c.id);\n    const newChildrenIds = [...(this.templateContent?.children || [])].filter((c) => !!c.id).map((c) => c.id);\n\n    return existingChildren.filter((c) => newChildrenIds.includes(c.id))\n  }\n\n  /**\n   * Gets the action function to be performed.\n   */\n  get performAction() {\n    if (this.action) {\n      const actionFunction = StreamActions[this.action];\n      if (actionFunction) {\n        return actionFunction\n      }\n      this.#raise(\"unknown action\");\n    }\n    this.#raise(\"action attribute is missing\");\n  }\n\n  /**\n   * Gets the target elements which the template will be rendered to.\n   */\n  get targetElements() {\n    if (this.target) {\n      return this.targetElementsById\n    } else if (this.targets) {\n      return this.targetElementsByQuery\n    } else {\n      this.#raise(\"target or targets attribute is missing\");\n    }\n  }\n\n  /**\n   * Gets the contents of the main `<template>`.\n   */\n  get templateContent() {\n    return this.templateElement.content.cloneNode(true)\n  }\n\n  /**\n   * Gets the main `<template>` used for rendering\n   */\n  get templateElement() {\n    if (this.firstElementChild === null) {\n      const template = this.ownerDocument.createElement(\"template\");\n      this.appendChild(template);\n      return template\n    } else if (this.firstElementChild instanceof HTMLTemplateElement) {\n      return this.firstElementChild\n    }\n    this.#raise(\"first child element must be a <template> element\");\n  }\n\n  /**\n   * Gets the current action.\n   */\n  get action() {\n    return this.getAttribute(\"action\")\n  }\n\n  /**\n   * Gets the current target (an element ID) to which the result will\n   * be rendered.\n   */\n  get target() {\n    return this.getAttribute(\"target\")\n  }\n\n  /**\n   * Gets the current \"targets\" selector (a CSS selector)\n   */\n  get targets() {\n    return this.getAttribute(\"targets\")\n  }\n\n  /**\n   * Reads the request-id attribute\n   */\n  get requestId() {\n    return this.getAttribute(\"request-id\")\n  }\n\n  #raise(message) {\n    throw new Error(`${this.description}: ${message}`)\n  }\n\n  get description() {\n    return (this.outerHTML.match(/<[^>]+>/) ?? [])[0] ?? \"<turbo-stream>\"\n  }\n\n  get beforeRenderEvent() {\n    return new CustomEvent(\"turbo:before-stream-render\", {\n      bubbles: true,\n      cancelable: true,\n      detail: { newStream: this, render: StreamElement.renderElement }\n    })\n  }\n\n  get targetElementsById() {\n    const element = this.ownerDocument?.getElementById(this.target);\n\n    if (element !== null) {\n      return [element]\n    } else {\n      return []\n    }\n  }\n\n  get targetElementsByQuery() {\n    const elements = this.ownerDocument?.querySelectorAll(this.targets);\n\n    if (elements.length !== 0) {\n      return Array.prototype.slice.call(elements)\n    } else {\n      return []\n    }\n  }\n}\n\nclass StreamSourceElement extends HTMLElement {\n  streamSource = null\n\n  connectedCallback() {\n    this.streamSource = this.src.match(/^ws{1,2}:/) ? new WebSocket(this.src) : new EventSource(this.src);\n\n    connectStreamSource(this.streamSource);\n  }\n\n  disconnectedCallback() {\n    if (this.streamSource) {\n      this.streamSource.close();\n\n      disconnectStreamSource(this.streamSource);\n    }\n  }\n\n  get src() {\n    return this.getAttribute(\"src\") || \"\"\n  }\n}\n\nFrameElement.delegateConstructor = FrameController;\n\nif (customElements.get(\"turbo-frame\") === undefined) {\n  customElements.define(\"turbo-frame\", FrameElement);\n}\n\nif (customElements.get(\"turbo-stream\") === undefined) {\n  customElements.define(\"turbo-stream\", StreamElement);\n}\n\nif (customElements.get(\"turbo-stream-source\") === undefined) {\n  customElements.define(\"turbo-stream-source\", StreamSourceElement);\n}\n\n(() => {\n  let element = document.currentScript;\n  if (!element) return\n  if (element.hasAttribute(\"data-turbo-suppress-warning\")) return\n\n  element = element.parentElement;\n  while (element) {\n    if (element == document.body) {\n      return console.warn(\n        unindent`\n        You are loading Turbo from a <script> element inside the <body> element. This is probably not what you meant to do!\n\n        Load your application\u2019s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.\n\n        For more information, see: https://turbo.hotwired.dev/handbook/building#working-with-script-elements\n\n        \u2014\u2014\n        Suppress this warning by adding a \"data-turbo-suppress-warning\" attribute to: %s\n      `,\n        element.outerHTML\n      )\n    }\n\n    element = element.parentElement;\n  }\n})();\n\nwindow.Turbo = { ...Turbo, StreamActions };\nstart();\n\nexport { FetchEnctype, FetchMethod, FetchRequest, FetchResponse, FrameElement, FrameLoadingStyle, FrameRenderer, PageRenderer, PageSnapshot, StreamActions, StreamElement, StreamSourceElement, cache, clearCache, connectStreamSource, disconnectStreamSource, fetchWithTurboHeaders as fetch, fetchEnctypeFromString, fetchMethodFromString, isSafe, navigator$1 as navigator, registerAdapter, renderStreamMessage, session, setConfirmMethod, setFormMode, setProgressBarDelay, start, visit };\n", "import \"@hotwired/turbo\"\n\n// Are we in an <iframe>?\nif (window.top !== window) {\n  // \uD83C\uDFB6 Never Gonna Give You Up \uD83C\uDFB6\n  location.replace(\"https://www.youtube.com/embed/dQw4w9WgXcQ\")\n}\n"],
  "mappings": "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",
  "names": []
}
